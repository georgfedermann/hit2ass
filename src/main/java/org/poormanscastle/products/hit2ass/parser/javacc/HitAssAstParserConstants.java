/* Generated By:JavaCC: Do not edit this line. HitAssAstParserConstants.java */
package org.poormanscastle.products.hit2ass.parser.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HitAssAstParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLOU_OPENER = 1;
  /** RegularExpression Id. */
  int END_COMMENT = 7;
  /** RegularExpression Id. */
  int IF = 9;
  /** RegularExpression Id. */
  int THEN = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int ENDIF = 12;
  /** RegularExpression Id. */
  int SB = 13;
  /** RegularExpression Id. */
  int WS = 14;
  /** RegularExpression Id. */
  int FS = 15;
  /** RegularExpression Id. */
  int SS = 16;
  /** RegularExpression Id. */
  int CA = 17;
  /** RegularExpression Id. */
  int MS = 18;
  /** RegularExpression Id. */
  int HC = 19;
  /** RegularExpression Id. */
  int GS = 20;
  /** RegularExpression Id. */
  int JS = 21;
  /** RegularExpression Id. */
  int ZS = 22;
  /** RegularExpression Id. */
  int GD = 23;
  /** RegularExpression Id. */
  int LD = 24;
  /** RegularExpression Id. */
  int LIST = 25;
  /** RegularExpression Id. */
  int DUMP = 26;
  /** RegularExpression Id. */
  int AS = 27;
  /** RegularExpression Id. */
  int IB = 28;
  /** RegularExpression Id. */
  int OF = 29;
  /** RegularExpression Id. */
  int DV = 30;
  /** RegularExpression Id. */
  int PS = 31;
  /** RegularExpression Id. */
  int SK = 32;
  /** RegularExpression Id. */
  int FIXED_TEXT = 33;
  /** RegularExpression Id. */
  int DV_ID = 38;
  /** RegularExpression Id. */
  int FILE_OPEN = 43;
  /** RegularExpression Id. */
  int FILE_CLOSE = 44;
  /** RegularExpression Id. */
  int FILE_READ = 45;
  /** RegularExpression Id. */
  int FILE_TEXT = 46;
  /** RegularExpression Id. */
  int IB_TEXT = 51;
  /** RegularExpression Id. */
  int PS_SB = 60;
  /** RegularExpression Id. */
  int PS_ID = 61;
  /** RegularExpression Id. */
  int SS_SHELLVAR = 66;
  /** RegularExpression Id. */
  int SS_LPAREN = 67;
  /** RegularExpression Id. */
  int SS_RPAREN = 68;
  /** RegularExpression Id. */
  int SS_QUOTE = 69;
  /** RegularExpression Id. */
  int SS_SHELLVAR_ID = 70;
  /** RegularExpression Id. */
  int SS_COMMA = 71;
  /** RegularExpression Id. */
  int SS_LBRACKET = 72;
  /** RegularExpression Id. */
  int SS_RBRACKET = 73;
  /** RegularExpression Id. */
  int SS_NUM = 74;
  /** RegularExpression Id. */
  int SS_ID = 75;
  /** RegularExpression Id. */
  int CA_COLON = 76;
  /** RegularExpression Id. */
  int SK_VAR_ID = 77;
  /** RegularExpression Id. */
  int MS_EQ = 86;
  /** RegularExpression Id. */
  int MS_EQ_STRICT = 87;
  /** RegularExpression Id. */
  int MS_OR = 88;
  /** RegularExpression Id. */
  int MS_AND = 89;
  /** RegularExpression Id. */
  int MS_XOR = 90;
  /** RegularExpression Id. */
  int MS_NOT = 91;
  /** RegularExpression Id. */
  int MS_NEQ = 92;
  /** RegularExpression Id. */
  int MS_LT = 93;
  /** RegularExpression Id. */
  int MS_LTE = 94;
  /** RegularExpression Id. */
  int MS_GT = 95;
  /** RegularExpression Id. */
  int MS_GTE = 96;
  /** RegularExpression Id. */
  int MS_PLUS = 97;
  /** RegularExpression Id. */
  int MS_MINUS = 98;
  /** RegularExpression Id. */
  int MS_TIMES = 99;
  /** RegularExpression Id. */
  int MS_DIV = 100;
  /** RegularExpression Id. */
  int MS_LPAREN = 101;
  /** RegularExpression Id. */
  int MS_RPAREN = 102;
  /** RegularExpression Id. */
  int MS_COMMA = 103;
  /** RegularExpression Id. */
  int MS_NUM = 104;
  /** RegularExpression Id. */
  int MS_DEC = 105;
  /** RegularExpression Id. */
  int MS_ID = 106;
  /** RegularExpression Id. */
  int MS_TEXT = 107;
  /** RegularExpression Id. */
  int IF_SHELLVAR = 108;
  /** RegularExpression Id. */
  int IF_EQ = 109;
  /** RegularExpression Id. */
  int IF_EQ_STRICT = 110;
  /** RegularExpression Id. */
  int IF_OR = 111;
  /** RegularExpression Id. */
  int IF_AND = 112;
  /** RegularExpression Id. */
  int IF_XOR = 113;
  /** RegularExpression Id. */
  int IF_NOT = 114;
  /** RegularExpression Id. */
  int IF_NEQ = 115;
  /** RegularExpression Id. */
  int IF_LT = 116;
  /** RegularExpression Id. */
  int IF_LTE = 117;
  /** RegularExpression Id. */
  int IF_GT = 118;
  /** RegularExpression Id. */
  int IF_GTE = 119;
  /** RegularExpression Id. */
  int IF_PLUS = 120;
  /** RegularExpression Id. */
  int IF_MINUS = 121;
  /** RegularExpression Id. */
  int IF_TIMES = 122;
  /** RegularExpression Id. */
  int IF_DIV = 123;
  /** RegularExpression Id. */
  int IF_QUOTE = 124;
  /** RegularExpression Id. */
  int IF_COLON = 125;
  /** RegularExpression Id. */
  int IF_LPAREN = 126;
  /** RegularExpression Id. */
  int IF_RPAREN = 127;
  /** RegularExpression Id. */
  int IF_NUM = 128;
  /** RegularExpression Id. */
  int IF_LBRACKET = 129;
  /** RegularExpression Id. */
  int IF_RBRACKET = 130;
  /** RegularExpression Id. */
  int IF_DEC = 131;
  /** RegularExpression Id. */
  int IF_SHELLVAR_ID = 132;
  /** RegularExpression Id. */
  int IF_ID = 133;
  /** RegularExpression Id. */
  int IF_TEXT = 134;
  /** RegularExpression Id. */
  int FOR_SHELLVAR = 139;
  /** RegularExpression Id. */
  int FOR_EQ = 140;
  /** RegularExpression Id. */
  int FOR_EQ_STRICT = 141;
  /** RegularExpression Id. */
  int FOR_OR = 142;
  /** RegularExpression Id. */
  int FOR_AND = 143;
  /** RegularExpression Id. */
  int FOR_XOR = 144;
  /** RegularExpression Id. */
  int FOR_NOT = 145;
  /** RegularExpression Id. */
  int FOR_NEQ = 146;
  /** RegularExpression Id. */
  int FOR_LT = 147;
  /** RegularExpression Id. */
  int FOR_LTE = 148;
  /** RegularExpression Id. */
  int FOR_GT = 149;
  /** RegularExpression Id. */
  int FOR_GTE = 150;
  /** RegularExpression Id. */
  int FOR_PLUS = 151;
  /** RegularExpression Id. */
  int FOR_MINUS = 152;
  /** RegularExpression Id. */
  int FOR_TIMES = 153;
  /** RegularExpression Id. */
  int FOR_DIV = 154;
  /** RegularExpression Id. */
  int FOR_QUOTE = 155;
  /** RegularExpression Id. */
  int FOR_COLON = 156;
  /** RegularExpression Id. */
  int FOR_LPAREN = 157;
  /** RegularExpression Id. */
  int FOR_RPAREN = 158;
  /** RegularExpression Id. */
  int FOR_NUM = 159;
  /** RegularExpression Id. */
  int FOR_LBRACKET = 160;
  /** RegularExpression Id. */
  int FOR_RBRACKET = 161;
  /** RegularExpression Id. */
  int FOR_DEC = 162;
  /** RegularExpression Id. */
  int FOR_SHELLVAR_ID = 163;
  /** RegularExpression Id. */
  int FOR_ID = 164;
  /** RegularExpression Id. */
  int FOR_TEXT = 165;
  /** RegularExpression Id. */
  int DS_EQ = 170;
  /** RegularExpression Id. */
  int DS_EQ_STRICT = 171;
  /** RegularExpression Id. */
  int DS_OR = 172;
  /** RegularExpression Id. */
  int DS_AND = 173;
  /** RegularExpression Id. */
  int DS_XOR = 174;
  /** RegularExpression Id. */
  int DS_NOT = 175;
  /** RegularExpression Id. */
  int DS_NEQ = 176;
  /** RegularExpression Id. */
  int DS_LT = 177;
  /** RegularExpression Id. */
  int DS_LTE = 178;
  /** RegularExpression Id. */
  int DS_GT = 179;
  /** RegularExpression Id. */
  int DS_GTE = 180;
  /** RegularExpression Id. */
  int DS_STRING_CONCAT = 181;
  /** RegularExpression Id. */
  int DS_PLUS = 182;
  /** RegularExpression Id. */
  int DS_MINUS = 183;
  /** RegularExpression Id. */
  int DS_TIMES = 184;
  /** RegularExpression Id. */
  int DS_DIV = 185;
  /** RegularExpression Id. */
  int DS_QUOTE = 186;
  /** RegularExpression Id. */
  int DS_COLON = 187;
  /** RegularExpression Id. */
  int DS_LPAREN = 188;
  /** RegularExpression Id. */
  int DS_RPAREN = 189;
  /** RegularExpression Id. */
  int DS_NUM = 190;
  /** RegularExpression Id. */
  int DS_DEC = 191;
  /** RegularExpression Id. */
  int DS_ID = 192;
  /** RegularExpression Id. */
  int DS_TEXT = 193;
  /** RegularExpression Id. */
  int AS_SHELLVAR = 198;
  /** RegularExpression Id. */
  int AS_EQ = 199;
  /** RegularExpression Id. */
  int AS_EQ_STRICT = 200;
  /** RegularExpression Id. */
  int AS_OR = 201;
  /** RegularExpression Id. */
  int AS_AND = 202;
  /** RegularExpression Id. */
  int AS_XOR = 203;
  /** RegularExpression Id. */
  int AS_NOT = 204;
  /** RegularExpression Id. */
  int AS_NEQ = 205;
  /** RegularExpression Id. */
  int AS_LT = 206;
  /** RegularExpression Id. */
  int AS_LTE = 207;
  /** RegularExpression Id. */
  int AS_GT = 208;
  /** RegularExpression Id. */
  int AS_GTE = 209;
  /** RegularExpression Id. */
  int AS_COMMA = 210;
  /** RegularExpression Id. */
  int AS_STRING_CONCAT = 211;
  /** RegularExpression Id. */
  int AS_PLUS = 212;
  /** RegularExpression Id. */
  int AS_MINUS = 213;
  /** RegularExpression Id. */
  int AS_TIMES = 214;
  /** RegularExpression Id. */
  int AS_DIV = 215;
  /** RegularExpression Id. */
  int AS_QUOTE = 216;
  /** RegularExpression Id. */
  int AS_COLON = 217;
  /** RegularExpression Id. */
  int AS_LPAREN = 218;
  /** RegularExpression Id. */
  int AS_RPAREN = 219;
  /** RegularExpression Id. */
  int AS_LBRACKET = 220;
  /** RegularExpression Id. */
  int AS_RBRACKET = 221;
  /** RegularExpression Id. */
  int AS_NUM = 222;
  /** RegularExpression Id. */
  int AS_DEC = 223;
  /** RegularExpression Id. */
  int AS_SHELLVAR_ID = 224;
  /** RegularExpression Id. */
  int AS_ID = 225;
  /** RegularExpression Id. */
  int AS_TEXT = 226;
  /** RegularExpression Id. */
  int LS_AMPERSAND = 231;
  /** RegularExpression Id. */
  int LS_LBRACE = 232;
  /** RegularExpression Id. */
  int LS_GD = 233;
  /** RegularExpression Id. */
  int LS_LD = 234;
  /** RegularExpression Id. */
  int LS_ID = 235;
  /** RegularExpression Id. */
  int LS_TEXT = 236;
  /** RegularExpression Id. */
  int DUMP_TEXT = 245;
  /** RegularExpression Id. */
  int LS_BRACES_AMPERSAND = 246;
  /** RegularExpression Id. */
  int LS_BRACES_COMMA = 247;
  /** RegularExpression Id. */
  int LS_BRACES_RBRACE = 248;
  /** RegularExpression Id. */
  int LS_BRACES_NUM = 249;
  /** RegularExpression Id. */
  int LS_BRACES_DEC = 250;
  /** RegularExpression Id. */
  int LS_BRACES_ID = 251;
  /** RegularExpression Id. */
  int LS_BRACES_TEXT = 252;
  /** RegularExpression Id. */
  int HC_HC = 257;
  /** RegularExpression Id. */
  int HC_NUM = 258;
  /** RegularExpression Id. */
  int HC_ID = 259;
  /** RegularExpression Id. */
  int HC_NAME = 260;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int TXT_MODE = 1;
  /** Lexical state. */
  int COMMAND_MODE_DS = 2;
  /** Lexical state. */
  int COMMAND_MODE_SS = 3;
  /** Lexical state. */
  int COMMAND_MODE_AS = 4;
  /** Lexical state. */
  int COMMAND_MODE_MS = 5;
  /** Lexical state. */
  int COMMENT_MODE = 6;
  /** Lexical state. */
  int COMMAND_MODE_DV = 7;
  /** Lexical state. */
  int COMMAND_MODE_FILE = 8;
  /** Lexical state. */
  int COMMAND_MODE_IB = 9;
  /** Lexical state. */
  int COMMAND_MODE_PS = 10;
  /** Lexical state. */
  int COMMAND_MODE_SK = 11;
  /** Lexical state. */
  int COMMAND_MODE_IF = 12;
  /** Lexical state. */
  int COMMAND_MODE_FOR = 13;
  /** Lexical state. */
  int COMMAND_MODE_LS = 14;
  /** Lexical state. */
  int COMMAND_MODE_DUMP = 15;
  /** Lexical state. */
  int COMMAND_MODE_LS_BRACES = 16;
  /** Lexical state. */
  int COMMAND_MODE_HC = 17;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<CLOU_OPENER>",
    "\"#*\"",
    "\"#*\"",
    "\"#*\"",
    "\"#*\"",
    "\"#*\"",
    "\"#\"",
    "<token of kind 8>",
    "\"#?\"",
    "\"/J\"",
    "\"/N\"",
    "\"#\"",
    "\"@\"",
    "\"#S\"",
    "\"#W\"",
    "\"#C\"",
    "<CA>",
    "\"#$\"",
    "\"#^\"",
    "\"#G\"",
    "\"#J\"",
    "\"#Z\"",
    "\"#D\"",
    "\"#d\"",
    "\"#L\"",
    "\"#q\"",
    "\"#=\"",
    "\"#B\"",
    "\"#X\"",
    "<DV>",
    "\"#>\"",
    "\"#!\"",
    "<FIXED_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "<DV_ID>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"O\"",
    "\"C\"",
    "\"\\\"r\\\"\"",
    "<FILE_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "<IB_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"@\"",
    "<PS_ID>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"SHELLVARIABLE\"",
    "\"(\"",
    "\")\"",
    "\"\\\"\"",
    "<SS_SHELLVAR_ID>",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "<SS_NUM>",
    "<SS_ID>",
    "\":\"",
    "<SK_VAR_ID>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "<MS_NUM>",
    "<MS_DEC>",
    "<MS_ID>",
    "<MS_TEXT>",
    "\"SHELLVARIABLE\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "<IF_NUM>",
    "\"[\"",
    "\"]\"",
    "<IF_DEC>",
    "<IF_SHELLVAR_ID>",
    "<IF_ID>",
    "<IF_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"SHELLVARIABLE\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "<FOR_NUM>",
    "\"[\"",
    "\"]\"",
    "<FOR_DEC>",
    "<FOR_SHELLVAR_ID>",
    "<FOR_ID>",
    "<FOR_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "<DS_NUM>",
    "<DS_DEC>",
    "<DS_ID>",
    "<DS_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"SHELLVARIABLE\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\",\"",
    "\"&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<AS_NUM>",
    "<AS_DEC>",
    "<AS_SHELLVAR_ID>",
    "<AS_ID>",
    "<AS_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"&\"",
    "\"{\"",
    "\"D\"",
    "\"d\"",
    "<LS_ID>",
    "<LS_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "<DUMP_TEXT>",
    "\"&\"",
    "\",\"",
    "\"}\"",
    "<LS_BRACES_NUM>",
    "<LS_BRACES_DEC>",
    "<LS_BRACES_ID>",
    "<LS_BRACES_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"#^\"",
    "<HC_NUM>",
    "<HC_ID>",
    "<HC_NAME>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
  };

}
