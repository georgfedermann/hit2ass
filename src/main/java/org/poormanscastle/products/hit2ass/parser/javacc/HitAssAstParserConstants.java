/* Generated By:JavaCC: Do not edit this line. HitAssAstParserConstants.java */
package org.poormanscastle.products.hit2ass.parser.javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HitAssAstParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLOU_OPENER = 1;
  /** RegularExpression Id. */
  int COMMENT_1 = 2;
  /** RegularExpression Id. */
  int COMMENT_2 = 3;
  /** RegularExpression Id. */
  int END_COMMENT_1 = 8;
  /** RegularExpression Id. */
  int END_COMMENT_2 = 10;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int NEW_LINE = 13;
  /** RegularExpression Id. */
  int THEN = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int ENDIF = 16;
  /** RegularExpression Id. */
  int SB = 17;
  /** RegularExpression Id. */
  int WS = 18;
  /** RegularExpression Id. */
  int FS = 19;
  /** RegularExpression Id. */
  int SS = 20;
  /** RegularExpression Id. */
  int CA = 21;
  /** RegularExpression Id. */
  int MS = 22;
  /** RegularExpression Id. */
  int HC = 23;
  /** RegularExpression Id. */
  int GS = 24;
  /** RegularExpression Id. */
  int JS = 25;
  /** RegularExpression Id. */
  int ZS = 26;
  /** RegularExpression Id. */
  int GD = 27;
  /** RegularExpression Id. */
  int LD = 28;
  /** RegularExpression Id. */
  int LIST = 29;
  /** RegularExpression Id. */
  int DUMP = 30;
  /** RegularExpression Id. */
  int AS = 31;
  /** RegularExpression Id. */
  int IB = 32;
  /** RegularExpression Id. */
  int OF = 33;
  /** RegularExpression Id. */
  int DV = 34;
  /** RegularExpression Id. */
  int PS = 35;
  /** RegularExpression Id. */
  int SK = 36;
  /** RegularExpression Id. */
  int FIXED_TEXT = 37;
  /** RegularExpression Id. */
  int DV_ID = 39;
  /** RegularExpression Id. */
  int FILE_OPEN = 44;
  /** RegularExpression Id. */
  int FILE_CLOSE = 45;
  /** RegularExpression Id. */
  int FILE_READ = 46;
  /** RegularExpression Id. */
  int FILE_TEXT = 47;
  /** RegularExpression Id. */
  int IB_TEXT = 52;
  /** RegularExpression Id. */
  int PS_SB = 61;
  /** RegularExpression Id. */
  int PS_EQ = 62;
  /** RegularExpression Id. */
  int PS_EQ_STRICT = 63;
  /** RegularExpression Id. */
  int PS_OR = 64;
  /** RegularExpression Id. */
  int PS_AND = 65;
  /** RegularExpression Id. */
  int PS_XOR = 66;
  /** RegularExpression Id. */
  int PS_NOT = 67;
  /** RegularExpression Id. */
  int PS_NEQ = 68;
  /** RegularExpression Id. */
  int PS_LT = 69;
  /** RegularExpression Id. */
  int PS_LTE = 70;
  /** RegularExpression Id. */
  int PS_GT = 71;
  /** RegularExpression Id. */
  int PS_GTE = 72;
  /** RegularExpression Id. */
  int PS_PLUS = 73;
  /** RegularExpression Id. */
  int PS_MINUS = 74;
  /** RegularExpression Id. */
  int PS_TIMES = 75;
  /** RegularExpression Id. */
  int PS_DIV = 76;
  /** RegularExpression Id. */
  int PS_COMMA = 77;
  /** RegularExpression Id. */
  int PS_QUOTE = 78;
  /** RegularExpression Id. */
  int PS_LPAREN = 79;
  /** RegularExpression Id. */
  int PS_RPAREN = 80;
  /** RegularExpression Id. */
  int PS_NUM = 81;
  /** RegularExpression Id. */
  int PS_DEC = 82;
  /** RegularExpression Id. */
  int PS_ID = 83;
  /** RegularExpression Id. */
  int PS_TEXT = 84;
  /** RegularExpression Id. */
  int PS_EL_SB = 89;
  /** RegularExpression Id. */
  int PS_EL_EQ = 90;
  /** RegularExpression Id. */
  int PS_EL_EQ_STRICT = 91;
  /** RegularExpression Id. */
  int PS_EL_OR = 92;
  /** RegularExpression Id. */
  int PS_EL_AND = 93;
  /** RegularExpression Id. */
  int PS_EL_XOR = 94;
  /** RegularExpression Id. */
  int PS_EL_NOT = 95;
  /** RegularExpression Id. */
  int PS_EL_NEQ = 96;
  /** RegularExpression Id. */
  int PS_EL_LT = 97;
  /** RegularExpression Id. */
  int PS_EL_LTE = 98;
  /** RegularExpression Id. */
  int PS_EL_GT = 99;
  /** RegularExpression Id. */
  int PS_EL_GTE = 100;
  /** RegularExpression Id. */
  int PS_EL_PLUS = 101;
  /** RegularExpression Id. */
  int PS_EL_MINUS = 102;
  /** RegularExpression Id. */
  int PS_EL_TIMES = 103;
  /** RegularExpression Id. */
  int PS_EL_DIV = 104;
  /** RegularExpression Id. */
  int PS_EL_COMMA = 105;
  /** RegularExpression Id. */
  int PS_EL_QUOTE = 106;
  /** RegularExpression Id. */
  int PS_EL_LPAREN = 107;
  /** RegularExpression Id. */
  int PS_EL_RPAREN = 108;
  /** RegularExpression Id. */
  int PS_EL_NUM = 109;
  /** RegularExpression Id. */
  int PS_EL_DEC = 110;
  /** RegularExpression Id. */
  int PS_EL_ID = 111;
  /** RegularExpression Id. */
  int PS_EL_TEXT = 112;
  /** RegularExpression Id. */
  int PS_IDX_CHECK_NEWLINE = 113;
  /** RegularExpression Id. */
  int PS_IDX_CHECK_LBRACKET = 114;
  /** RegularExpression Id. */
  int PS_IDX_CHECK_LPAREN = 115;
  /** RegularExpression Id. */
  int PS_IDX_CHECK_FIXED_TEXT = 116;
  /** RegularExpression Id. */
  int PS_IDX_SB = 117;
  /** RegularExpression Id. */
  int PS_IDX_CHECK_MS = 118;
  /** RegularExpression Id. */
  int PS_IDX_CHECK_SKIP = 119;
  /** RegularExpression Id. */
  int PS_IDX_PSEUDO_COMMENT = 120;
  /** RegularExpression Id. */
  int PS_IDX_LBRACKET = 125;
  /** RegularExpression Id. */
  int PS_IDX_RBRACKET = 126;
  /** RegularExpression Id. */
  int PS_IDX_EQ = 127;
  /** RegularExpression Id. */
  int PS_IDX_EQ_STRICT = 128;
  /** RegularExpression Id. */
  int PS_IDX_OR = 129;
  /** RegularExpression Id. */
  int PS_IDX_AND = 130;
  /** RegularExpression Id. */
  int PS_IDX_XOR = 131;
  /** RegularExpression Id. */
  int PS_IDX_NOT = 132;
  /** RegularExpression Id. */
  int PS_IDX_NEQ = 133;
  /** RegularExpression Id. */
  int PS_IDX_LT = 134;
  /** RegularExpression Id. */
  int PS_IDX_LTE = 135;
  /** RegularExpression Id. */
  int PS_IDX_GT = 136;
  /** RegularExpression Id. */
  int PS_IDX_GTE = 137;
  /** RegularExpression Id. */
  int PS_IDX_PLUS = 138;
  /** RegularExpression Id. */
  int PS_IDX_MINUS = 139;
  /** RegularExpression Id. */
  int PS_IDX_TIMES = 140;
  /** RegularExpression Id. */
  int PS_IDX_DIV = 141;
  /** RegularExpression Id. */
  int PS_IDX_QUOTE = 142;
  /** RegularExpression Id. */
  int PS_IDX_LPAREN = 143;
  /** RegularExpression Id. */
  int PS_IDX_RPAREN = 144;
  /** RegularExpression Id. */
  int PS_IDX_COMMA = 145;
  /** RegularExpression Id. */
  int PS_IDX_NUM = 146;
  /** RegularExpression Id. */
  int PS_IDX_DEC = 147;
  /** RegularExpression Id. */
  int PS_IDX_ID = 148;
  /** RegularExpression Id. */
  int PS_IDX_TEXT = 149;
  /** RegularExpression Id. */
  int SS_LPAREN = 154;
  /** RegularExpression Id. */
  int SS_RPAREN = 155;
  /** RegularExpression Id. */
  int SS_QUOTE = 156;
  /** RegularExpression Id. */
  int SS_COMMA = 157;
  /** RegularExpression Id. */
  int SS_LBRACKET = 158;
  /** RegularExpression Id. */
  int SS_RBRACKET = 159;
  /** RegularExpression Id. */
  int SS_NUM = 160;
  /** RegularExpression Id. */
  int SS_ID = 161;
  /** RegularExpression Id. */
  int CA_COLON = 162;
  /** RegularExpression Id. */
  int SK_VAR_ID = 163;
  /** RegularExpression Id. */
  int MS_PS = 172;
  /** RegularExpression Id. */
  int MS_MS = 173;
  /** RegularExpression Id. */
  int MS_EQ = 174;
  /** RegularExpression Id. */
  int MS_EQ_STRICT = 175;
  /** RegularExpression Id. */
  int MS_OR = 176;
  /** RegularExpression Id. */
  int MS_AND = 177;
  /** RegularExpression Id. */
  int MS_XOR = 178;
  /** RegularExpression Id. */
  int MS_NOT = 179;
  /** RegularExpression Id. */
  int MS_NEQ = 180;
  /** RegularExpression Id. */
  int MS_LT = 181;
  /** RegularExpression Id. */
  int MS_LTE = 182;
  /** RegularExpression Id. */
  int MS_GT = 183;
  /** RegularExpression Id. */
  int MS_GTE = 184;
  /** RegularExpression Id. */
  int MS_PLUS = 185;
  /** RegularExpression Id. */
  int MS_MINUS = 186;
  /** RegularExpression Id. */
  int MS_TIMES = 187;
  /** RegularExpression Id. */
  int MS_DIV = 188;
  /** RegularExpression Id. */
  int MS_LPAREN = 189;
  /** RegularExpression Id. */
  int MS_RPAREN = 190;
  /** RegularExpression Id. */
  int MS_LBRACKET = 191;
  /** RegularExpression Id. */
  int MS_RBRACKET = 192;
  /** RegularExpression Id. */
  int MS_COMMA = 193;
  /** RegularExpression Id. */
  int MS_NUM = 194;
  /** RegularExpression Id. */
  int MS_DEC = 195;
  /** RegularExpression Id. */
  int MS_TEXT = 196;
  /** RegularExpression Id. */
  int MS_ID = 199;
  /** RegularExpression Id. */
  int IF_COMMA = 200;
  /** RegularExpression Id. */
  int IF_EQ = 201;
  /** RegularExpression Id. */
  int IF_EQ_STRICT = 202;
  /** RegularExpression Id. */
  int IF_OR = 203;
  /** RegularExpression Id. */
  int IF_AND = 204;
  /** RegularExpression Id. */
  int IF_XOR = 205;
  /** RegularExpression Id. */
  int IF_NOT = 206;
  /** RegularExpression Id. */
  int IF_NEQ = 207;
  /** RegularExpression Id. */
  int IF_LT = 208;
  /** RegularExpression Id. */
  int IF_LTE = 209;
  /** RegularExpression Id. */
  int IF_GT = 210;
  /** RegularExpression Id. */
  int IF_GTE = 211;
  /** RegularExpression Id. */
  int IF_PLUS = 212;
  /** RegularExpression Id. */
  int IF_MINUS = 213;
  /** RegularExpression Id. */
  int IF_TIMES = 214;
  /** RegularExpression Id. */
  int IF_DIV = 215;
  /** RegularExpression Id. */
  int IF_QUOTE = 216;
  /** RegularExpression Id. */
  int IF_COLON = 217;
  /** RegularExpression Id. */
  int IF_LPAREN = 218;
  /** RegularExpression Id. */
  int IF_RPAREN = 219;
  /** RegularExpression Id. */
  int IF_NUM = 220;
  /** RegularExpression Id. */
  int IF_LBRACKET = 221;
  /** RegularExpression Id. */
  int IF_RBRACKET = 222;
  /** RegularExpression Id. */
  int IF_DEC = 223;
  /** RegularExpression Id. */
  int IF_ID = 224;
  /** RegularExpression Id. */
  int IF_TEXT = 225;
  /** RegularExpression Id. */
  int FOR_EQ = 230;
  /** RegularExpression Id. */
  int FOR_EQ_STRICT = 231;
  /** RegularExpression Id. */
  int FOR_OR = 232;
  /** RegularExpression Id. */
  int FOR_AND = 233;
  /** RegularExpression Id. */
  int FOR_XOR = 234;
  /** RegularExpression Id. */
  int FOR_NOT = 235;
  /** RegularExpression Id. */
  int FOR_NEQ = 236;
  /** RegularExpression Id. */
  int FOR_LT = 237;
  /** RegularExpression Id. */
  int FOR_LTE = 238;
  /** RegularExpression Id. */
  int FOR_GT = 239;
  /** RegularExpression Id. */
  int FOR_GTE = 240;
  /** RegularExpression Id. */
  int FOR_PLUS = 241;
  /** RegularExpression Id. */
  int FOR_MINUS = 242;
  /** RegularExpression Id. */
  int FOR_TIMES = 243;
  /** RegularExpression Id. */
  int FOR_DIV = 244;
  /** RegularExpression Id. */
  int FOR_QUOTE = 245;
  /** RegularExpression Id. */
  int FOR_COLON = 246;
  /** RegularExpression Id. */
  int FOR_LPAREN = 247;
  /** RegularExpression Id. */
  int FOR_RPAREN = 248;
  /** RegularExpression Id. */
  int FOR_NUM = 249;
  /** RegularExpression Id. */
  int FOR_LBRACKET = 250;
  /** RegularExpression Id. */
  int FOR_RBRACKET = 251;
  /** RegularExpression Id. */
  int FOR_DEC = 252;
  /** RegularExpression Id. */
  int FOR_ID = 253;
  /** RegularExpression Id. */
  int FOR_TEXT = 254;
  /** RegularExpression Id. */
  int DS_EQ = 259;
  /** RegularExpression Id. */
  int DS_EQ_STRICT = 260;
  /** RegularExpression Id. */
  int DS_OR = 261;
  /** RegularExpression Id. */
  int DS_AND = 262;
  /** RegularExpression Id. */
  int DS_XOR = 263;
  /** RegularExpression Id. */
  int DS_NOT = 264;
  /** RegularExpression Id. */
  int DS_NEQ = 265;
  /** RegularExpression Id. */
  int DS_LT = 266;
  /** RegularExpression Id. */
  int DS_LTE = 267;
  /** RegularExpression Id. */
  int DS_GT = 268;
  /** RegularExpression Id. */
  int DS_GTE = 269;
  /** RegularExpression Id. */
  int DS_STRING_CONCAT = 270;
  /** RegularExpression Id. */
  int DS_PLUS = 271;
  /** RegularExpression Id. */
  int DS_MINUS = 272;
  /** RegularExpression Id. */
  int DS_TIMES = 273;
  /** RegularExpression Id. */
  int DS_DIV = 274;
  /** RegularExpression Id. */
  int DS_QUOTE = 275;
  /** RegularExpression Id. */
  int DS_COLON = 276;
  /** RegularExpression Id. */
  int DS_COMMA = 277;
  /** RegularExpression Id. */
  int DS_LPAREN = 278;
  /** RegularExpression Id. */
  int DS_RPAREN = 279;
  /** RegularExpression Id. */
  int DS_LBRACKET = 280;
  /** RegularExpression Id. */
  int DS_RBRACKET = 281;
  /** RegularExpression Id. */
  int DS_NUM = 282;
  /** RegularExpression Id. */
  int DS_DEC = 283;
  /** RegularExpression Id. */
  int DS_ID = 284;
  /** RegularExpression Id. */
  int DS_TEXT = 285;
  /** RegularExpression Id. */
  int AS_SB = 290;
  /** RegularExpression Id. */
  int AS_EQ = 291;
  /** RegularExpression Id. */
  int AS_EQ_STRICT = 292;
  /** RegularExpression Id. */
  int AS_OR = 293;
  /** RegularExpression Id. */
  int AS_AND = 294;
  /** RegularExpression Id. */
  int AS_XOR = 295;
  /** RegularExpression Id. */
  int AS_NOT = 296;
  /** RegularExpression Id. */
  int AS_NEQ = 297;
  /** RegularExpression Id. */
  int AS_LT = 298;
  /** RegularExpression Id. */
  int AS_LTE = 299;
  /** RegularExpression Id. */
  int AS_GT = 300;
  /** RegularExpression Id. */
  int AS_GTE = 301;
  /** RegularExpression Id. */
  int AS_COMMA = 302;
  /** RegularExpression Id. */
  int AS_STRING_CONCAT = 303;
  /** RegularExpression Id. */
  int AS_PLUS = 304;
  /** RegularExpression Id. */
  int AS_MINUS = 305;
  /** RegularExpression Id. */
  int AS_TIMES = 306;
  /** RegularExpression Id. */
  int AS_DIV = 307;
  /** RegularExpression Id. */
  int AS_QUOTE = 308;
  /** RegularExpression Id. */
  int AS_COLON = 309;
  /** RegularExpression Id. */
  int AS_LPAREN = 310;
  /** RegularExpression Id. */
  int AS_RPAREN = 311;
  /** RegularExpression Id. */
  int AS_LBRACKET = 312;
  /** RegularExpression Id. */
  int AS_RBRACKET = 313;
  /** RegularExpression Id. */
  int AS_NUM = 314;
  /** RegularExpression Id. */
  int AS_DEC = 315;
  /** RegularExpression Id. */
  int AS_ID = 316;
  /** RegularExpression Id. */
  int AS_TEXT = 317;
  /** RegularExpression Id. */
  int LS_AMPERSAND = 322;
  /** RegularExpression Id. */
  int LS_LBRACE = 323;
  /** RegularExpression Id. */
  int LS_GD = 324;
  /** RegularExpression Id. */
  int LS_LD = 325;
  /** RegularExpression Id. */
  int LS_LBRACKET = 326;
  /** RegularExpression Id. */
  int LS_RBRACKET = 327;
  /** RegularExpression Id. */
  int LS_ID = 328;
  /** RegularExpression Id. */
  int LS_TEXT = 329;
  /** RegularExpression Id. */
  int DUMP_TEXT = 338;
  /** RegularExpression Id. */
  int LS_BRACES_AMPERSAND = 339;
  /** RegularExpression Id. */
  int LS_BRACES_COMMA = 340;
  /** RegularExpression Id. */
  int LS_BRACES_RBRACE = 341;
  /** RegularExpression Id. */
  int LS_BRACES_LBRACKET = 342;
  /** RegularExpression Id. */
  int LS_BRACES_RBRACKET = 343;
  /** RegularExpression Id. */
  int LS_BRACES_NUM = 344;
  /** RegularExpression Id. */
  int LS_BRACES_DEC = 345;
  /** RegularExpression Id. */
  int LS_BRACES_ID = 346;
  /** RegularExpression Id. */
  int LS_BRACES_TEXT = 347;
  /** RegularExpression Id. */
  int HC_HC = 352;
  /** RegularExpression Id. */
  int HC_NUM = 353;
  /** RegularExpression Id. */
  int HC_LBRACKET = 354;
  /** RegularExpression Id. */
  int HC_RBRACKET = 355;
  /** RegularExpression Id. */
  int HC_ID = 356;
  /** RegularExpression Id. */
  int HC_NAME = 357;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int TXT_MODE = 1;
  /** Lexical state. */
  int COMMAND_MODE_DS = 2;
  /** Lexical state. */
  int COMMAND_MODE_SS = 3;
  /** Lexical state. */
  int COMMAND_MODE_AS = 4;
  /** Lexical state. */
  int COMMAND_MODE_MS = 5;
  /** Lexical state. */
  int COMMENT_MODE = 6;
  /** Lexical state. */
  int COMMENT_MODE_2 = 7;
  /** Lexical state. */
  int COMMAND_MODE_DV = 8;
  /** Lexical state. */
  int COMMAND_MODE_FILE = 9;
  /** Lexical state. */
  int COMMAND_MODE_IB = 10;
  /** Lexical state. */
  int COMMAND_MODE_PS = 11;
  /** Lexical state. */
  int COMMAND_MODE_PS_EL = 12;
  /** Lexical state. */
  int COMMAND_MODE_PS_IDX_CHECK = 13;
  /** Lexical state. */
  int COMMAND_MODE_PS_IDX = 14;
  /** Lexical state. */
  int COMMAND_MODE_SK = 15;
  /** Lexical state. */
  int COMMAND_MODE_MS_BEFORE_ID = 16;
  /** Lexical state. */
  int COMMAND_MODE_IF = 17;
  /** Lexical state. */
  int COMMAND_MODE_FOR = 18;
  /** Lexical state. */
  int COMMAND_MODE_LS = 19;
  /** Lexical state. */
  int COMMAND_MODE_DUMP = 20;
  /** Lexical state. */
  int COMMAND_MODE_LS_BRACES = 21;
  /** Lexical state. */
  int COMMAND_MODE_HC = 22;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<CLOU_OPENER>",
    "\"#*\"",
    "<COMMENT_2>",
    "\"#*\"",
    "\"#*\"",
    "\"#*\"",
    "\"#*\"",
    "\"#\"",
    "<token of kind 9>",
    "<END_COMMENT_2>",
    "<token of kind 11>",
    "\"#?\"",
    "<NEW_LINE>",
    "<THEN>",
    "<ELSE>",
    "\"#\"",
    "\"@\"",
    "\"#S\"",
    "\"#W\"",
    "\"#C\"",
    "<CA>",
    "\"#$\"",
    "\"#^\"",
    "\"#G\"",
    "\"#J\"",
    "\"#Z\"",
    "\"#D\"",
    "\"#d\"",
    "\"#L\"",
    "\"#q\"",
    "\"#=\"",
    "\"#B\"",
    "\"#X\"",
    "<DV>",
    "\"#>\"",
    "\"#!\"",
    "<FIXED_TEXT>",
    "\"\\t\"",
    "<DV_ID>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"O\"",
    "\"C\"",
    "\"\\\"r\\\"\"",
    "<FILE_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "<IB_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"@\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\",\"",
    "\"\\\"\"",
    "\"(\"",
    "\")\"",
    "<PS_NUM>",
    "<PS_DEC>",
    "<PS_ID>",
    "<PS_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"@\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\",\"",
    "\"\\\"\"",
    "\"(\"",
    "\")\"",
    "<PS_EL_NUM>",
    "<PS_EL_DEC>",
    "<PS_EL_ID>",
    "<PS_EL_TEXT>",
    "<PS_IDX_CHECK_NEWLINE>",
    "\"[\"",
    "\"(\"",
    "<PS_IDX_CHECK_FIXED_TEXT>",
    "\"@\"",
    "\"#$\"",
    "<PS_IDX_CHECK_SKIP>",
    "\"#*#\"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
    "\" \"",
    "\"[\"",
    "\"]\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "<PS_IDX_NUM>",
    "<PS_IDX_DEC>",
    "<PS_IDX_ID>",
    "<PS_IDX_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"(\"",
    "\")\"",
    "\"\\\"\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "<SS_NUM>",
    "<SS_ID>",
    "\":\"",
    "<SK_VAR_ID>",
    "\" \"",
    "\"\\n\"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"#>\"",
    "\"#$\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\",\"",
    "<MS_NUM>",
    "<MS_DEC>",
    "<MS_TEXT>",
    "\"\\t\"",
    "\" \"",
    "<MS_ID>",
    "\",\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "<IF_NUM>",
    "\"[\"",
    "\"]\"",
    "<IF_DEC>",
    "<IF_ID>",
    "<IF_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "<FOR_NUM>",
    "\"[\"",
    "\"]\"",
    "<FOR_DEC>",
    "<FOR_ID>",
    "<FOR_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<DS_NUM>",
    "<DS_DEC>",
    "<DS_ID>",
    "<DS_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"@\"",
    "\"=\"",
    "\"==\"",
    "\"oder\"",
    "\"und\"",
    "\"xor_tbd\"",
    "\"not_tbd\"",
    "\"<>\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\",\"",
    "\"&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\"\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "<AS_NUM>",
    "<AS_DEC>",
    "<AS_ID>",
    "<AS_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"&\"",
    "\"{\"",
    "\"D\"",
    "\"d\"",
    "\"[\"",
    "\"]\"",
    "<LS_ID>",
    "<LS_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"\\t\"",
    "<DUMP_TEXT>",
    "\"&\"",
    "\",\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "<LS_BRACES_NUM>",
    "<LS_BRACES_DEC>",
    "<LS_BRACES_ID>",
    "<LS_BRACES_TEXT>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
    "\"#^\"",
    "<HC_NUM>",
    "\"[\"",
    "\"]\"",
    "<HC_ID>",
    "<HC_NAME>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "\" \"",
  };

}
