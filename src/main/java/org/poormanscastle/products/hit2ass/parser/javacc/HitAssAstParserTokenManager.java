/* HitAssAstParserTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. HitAssAstParserTokenManager.java */
package org.poormanscastle.products.hit2ass.parser.javacc;
import org.poormanscastle.products.hit2ass.ast.domain.*;
import org.poormanscastle.products.hit2ass.exceptions.*;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;

/** Token Manager. */
@SuppressWarnings("unused")public class HitAssAstParserTokenManager implements HitAssAstParserConstants {

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_19(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_19(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   return jjMoveNfa_19(jjStopStringLiteralDfa_19(pos, active0, active1, active2, active3, active4, active5), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_19(){
   switch(curChar)
   {
      case 38:
         return jjStopAtPos(0, 329);
      case 44:
         return jjStopAtPos(0, 330);
      case 91:
         return jjStopAtPos(0, 332);
      case 93:
         return jjStopAtPos(0, 333);
      case 125:
         return jjStopAtPos(0, 331);
      default :
         return jjMoveNfa_19(0, 0);
   }
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_19(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 334)
                        kind = 334;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 335)
                     kind = 335;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 336)
                     kind = 336;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 337)
                     kind = 337;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 334)
                     kind = 334;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 334)
                     kind = 334;
                  { jjCheckNAdd(10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 335)
                     kind = 335;
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 335)
                     kind = 335;
                  { jjCheckNAdd(13); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 336)
                     kind = 336;
                  { jjCheckNAdd(3); }
                  break;
               case 5:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
               case 7:
                  { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 6:
               case 7:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_17(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_17(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   return jjMoveNfa_17(jjStopStringLiteralDfa_17(pos, active0, active1, active2, active3, active4, active5), pos + 1);
}
private int jjMoveStringLiteralDfa0_17(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 320);
      case 13:
         return jjStopAtPos(0, 321);
      case 38:
         return jjStopAtPos(0, 312);
      case 68:
         return jjStartNfaWithStates_17(0, 314, 1);
      case 91:
         return jjStopAtPos(0, 316);
      case 93:
         return jjStopAtPos(0, 317);
      case 100:
         return jjStartNfaWithStates_17(0, 315, 1);
      case 123:
         return jjStopAtPos(0, 313);
      default :
         return jjMoveNfa_17(0, 0);
   }
}
private int jjStartNfaWithStates_17(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_17(state, pos + 1);
}
static final long[] jjbitVec1 = {
   0x0L, 0x0L, 0x100000000L, 0x0L
};
private int jjMoveNfa_17(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 7;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 34)
                     { jjCheckNAddStates(6, 8); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 318)
                     kind = 318;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 4:
                  { jjCheckNAddStates(6, 8); }
                  break;
               case 5:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(6, 8); }
                  break;
               case 6:
                  if (curChar == 34 && kind > 319)
                     kind = 319;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 318)
                     kind = 318;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 4:
               case 5:
                  { jjCheckNAddStates(6, 8); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec1[i2] & l2) == 0L)
                     break;
                  if (kind > 318)
                     kind = 318;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 4:
               case 5:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(6, 8); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 7 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_13(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active1 & 0xe000000000000000L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 144;
            return 3;
         }
         return -1;
      case 1:
         if ((active1 & 0xe000000000000000L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 144;
            jjmatchedPos = 1;
            return 3;
         }
         return -1;
      case 2:
         if ((active1 & 0x4000000000000000L) != 0L)
            return 3;
         if ((active1 & 0xa000000000000000L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 144;
            jjmatchedPos = 2;
            return 3;
         }
         return -1;
      case 3:
         if ((active1 & 0x2000000000000000L) != 0L)
            return 3;
         if ((active1 & 0x8000000000000000L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 144;
            jjmatchedPos = 3;
            return 3;
         }
         return -1;
      case 4:
         if ((active1 & 0x8000000000000000L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 144;
            jjmatchedPos = 4;
            return 3;
         }
         return -1;
      case 5:
         if ((active1 & 0x8000000000000000L) != 0L || (active2 & 0x1L) != 0L)
         {
            jjmatchedKind = 144;
            jjmatchedPos = 5;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_13(int pos, long active0, long active1, long active2){
   return jjMoveNfa_13(jjStopStringLiteralDfa_13(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_13(){
   switch(curChar)
   {
      case 9:
         return jjStopAtPos(0, 118);
      case 10:
         return jjStopAtPos(0, 117);
      case 13:
         return jjStopAtPos(0, 119);
      case 32:
         return jjStopAtPos(0, 120);
      case 34:
         return jjStopAtPos(0, 138);
      case 40:
         return jjStopAtPos(0, 139);
      case 41:
         return jjStopAtPos(0, 140);
      case 42:
         return jjStopAtPos(0, 136);
      case 43:
         return jjStopAtPos(0, 134);
      case 44:
         return jjStopAtPos(0, 141);
      case 45:
         return jjStopAtPos(0, 135);
      case 47:
         return jjStopAtPos(0, 137);
      case 60:
         jjmatchedKind = 130;
         return jjMoveStringLiteralDfa1_13(0x0L, 0xaL);
      case 61:
         jjmatchedKind = 123;
         return jjMoveStringLiteralDfa1_13(0x1000000000000000L, 0x0L);
      case 62:
         jjmatchedKind = 132;
         return jjMoveStringLiteralDfa1_13(0x0L, 0x20L);
      case 91:
         return jjStopAtPos(0, 121);
      case 93:
         return jjStopAtPos(0, 122);
      case 110:
         return jjMoveStringLiteralDfa1_13(0x0L, 0x1L);
      case 111:
         return jjMoveStringLiteralDfa1_13(0x2000000000000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_13(0x4000000000000000L, 0x0L);
      case 120:
         return jjMoveStringLiteralDfa1_13(0x8000000000000000L, 0x0L);
      default :
         return jjMoveNfa_13(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_13(long active1, long active2){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(0, 0L, active1, active2);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active1 & 0x1000000000000000L) != 0L)
            return jjStopAtPos(1, 124);
         else if ((active2 & 0x8L) != 0L)
            return jjStopAtPos(1, 131);
         else if ((active2 & 0x20L) != 0L)
            return jjStopAtPos(1, 133);
         break;
      case 62:
         if ((active2 & 0x2L) != 0L)
            return jjStopAtPos(1, 129);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_13(active1, 0x2000000000000000L, active2, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_13(active1, 0x4000000000000000L, active2, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_13(active1, 0x8000000000000000L, active2, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(0, 0L, active1, active2);
}
private int jjMoveStringLiteralDfa2_13(long old1, long active1, long old2, long active2){
   if (((active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_13(0, 0L, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(1, 0L, active1, active2);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active1 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_13(2, 126, 3);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_13(active1, 0x2000000000000000L, active2, 0L);
      case 114:
         return jjMoveStringLiteralDfa3_13(active1, 0x8000000000000000L, active2, 0L);
      case 116:
         return jjMoveStringLiteralDfa3_13(active1, 0L, active2, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(1, 0L, active1, active2);
}
private int jjMoveStringLiteralDfa3_13(long old1, long active1, long old2, long active2){
   if (((active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_13(1, 0L, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(2, 0L, active1, active2);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_13(active1, 0x8000000000000000L, active2, 0x1L);
      case 114:
         if ((active1 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_13(3, 125, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_13(2, 0L, active1, active2);
}
private int jjMoveStringLiteralDfa4_13(long old1, long active1, long old2, long active2){
   if (((active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_13(2, 0L, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(3, 0L, active1, active2);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_13(active1, 0x8000000000000000L, active2, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(3, 0L, active1, active2);
}
private int jjMoveStringLiteralDfa5_13(long old1, long active1, long old2, long active2){
   if (((active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_13(3, 0L, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(4, 0L, active1, active2);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_13(active1, 0x8000000000000000L, active2, 0x1L);
      default :
         break;
   }
   return jjStartNfa_13(4, 0L, active1, active2);
}
private int jjMoveStringLiteralDfa6_13(long old1, long active1, long old2, long active2){
   if (((active1 &= old1) | (active2 &= old2)) == 0L)
      return jjStartNfa_13(4, 0L, old1, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_13(5, 0L, active1, active2);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active1 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_13(6, 127, 3);
         else if ((active2 & 0x1L) != 0L)
            return jjStartNfaWithStates_13(6, 128, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_13(5, 0L, active1, active2);
}
private int jjStartNfaWithStates_13(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_13(state, pos + 1);
}
static final long[] jjbitVec2 = {
   0x0L, 0x0L, 0x100000000L, 0x1040001090400010L
};
private int jjMoveNfa_13(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 9;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 142)
                        kind = 142;
                     { jjCheckNAddStates(9, 11); }
                  }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 143)
                     kind = 143;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff100000000000L & l) == 0L)
                     break;
                  if (kind > 144)
                     kind = 144;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 142)
                     kind = 142;
                  { jjCheckNAddStates(9, 11); }
                  break;
               case 5:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 142)
                     kind = 142;
                  { jjCheckNAdd(5); }
                  break;
               case 6:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 143)
                     kind = 143;
                  { jjCheckNAddTwoStates(6, 7); }
                  break;
               case 7:
                  if (curChar == 46)
                     { jjCheckNAdd(8); }
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 143)
                     kind = 143;
                  { jjCheckNAdd(8); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 144)
                     kind = 144;
                  { jjCheckNAdd(3); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((jjbitVec2[i2] & l2) == 0L)
                     break;
                  if (kind > 144)
                     kind = 144;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 9 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_11(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x20000000000L) != 0L)
            return 14;
         if ((active1 & 0x78000000L) != 0L)
         {
            jjmatchedKind = 110;
            return 3;
         }
         return -1;
      case 1:
         if ((active1 & 0x78000000L) != 0L)
         {
            jjmatchedKind = 110;
            jjmatchedPos = 1;
            return 3;
         }
         return -1;
      case 2:
         if ((active1 & 0x68000000L) != 0L)
         {
            jjmatchedKind = 110;
            jjmatchedPos = 2;
            return 3;
         }
         if ((active1 & 0x10000000L) != 0L)
            return 3;
         return -1;
      case 3:
         if ((active1 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 110;
            jjmatchedPos = 3;
            return 3;
         }
         if ((active1 & 0x8000000L) != 0L)
            return 3;
         return -1;
      case 4:
         if ((active1 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 110;
            jjmatchedPos = 4;
            return 3;
         }
         return -1;
      case 5:
         if ((active1 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 110;
            jjmatchedPos = 5;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_11(int pos, long active0, long active1){
   return jjMoveNfa_11(jjStopStringLiteralDfa_11(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_11(){
   switch(curChar)
   {
      case 34:
         return jjStartNfaWithStates_11(0, 105, 14);
      case 40:
         return jjStopAtPos(0, 106);
      case 41:
         return jjStopAtPos(0, 107);
      case 42:
         return jjStopAtPos(0, 102);
      case 43:
         return jjStopAtPos(0, 100);
      case 44:
         return jjStopAtPos(0, 104);
      case 45:
         return jjStopAtPos(0, 101);
      case 47:
         return jjStopAtPos(0, 103);
      case 60:
         jjmatchedKind = 96;
         return jjMoveStringLiteralDfa1_11(0x280000000L);
      case 61:
         jjmatchedKind = 89;
         return jjMoveStringLiteralDfa1_11(0x4000000L);
      case 62:
         jjmatchedKind = 98;
         return jjMoveStringLiteralDfa1_11(0x800000000L);
      case 64:
         return jjStopAtPos(0, 88);
      case 110:
         return jjMoveStringLiteralDfa1_11(0x40000000L);
      case 111:
         return jjMoveStringLiteralDfa1_11(0x8000000L);
      case 117:
         return jjMoveStringLiteralDfa1_11(0x10000000L);
      case 120:
         return jjMoveStringLiteralDfa1_11(0x20000000L);
      default :
         return jjMoveNfa_11(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_11(long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(0, 0L, active1);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active1 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 90);
         else if ((active1 & 0x200000000L) != 0L)
            return jjStopAtPos(1, 97);
         else if ((active1 & 0x800000000L) != 0L)
            return jjStopAtPos(1, 99);
         break;
      case 62:
         if ((active1 & 0x80000000L) != 0L)
            return jjStopAtPos(1, 95);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_11(active1, 0x8000000L);
      case 110:
         return jjMoveStringLiteralDfa2_11(active1, 0x10000000L);
      case 111:
         return jjMoveStringLiteralDfa2_11(active1, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_11(0, 0L, active1);
}
private int jjMoveStringLiteralDfa2_11(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(0, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(1, 0L, active1);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_11(2, 92, 3);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_11(active1, 0x8000000L);
      case 114:
         return jjMoveStringLiteralDfa3_11(active1, 0x20000000L);
      case 116:
         return jjMoveStringLiteralDfa3_11(active1, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_11(1, 0L, active1);
}
private int jjMoveStringLiteralDfa3_11(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(1, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(2, 0L, active1);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_11(active1, 0x60000000L);
      case 114:
         if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_11(3, 91, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_11(2, 0L, active1);
}
private int jjMoveStringLiteralDfa4_11(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(2, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_11(active1, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_11(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_11(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_11(active1, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_11(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_11(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_11(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_11(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active1 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_11(6, 93, 3);
         else if ((active1 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_11(6, 94, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_11(5, 0L, active1);
}
private int jjStartNfaWithStates_11(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_11(state, pos + 1);
}
private int jjMoveNfa_11(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 34)
                  {
                     if (kind > 111)
                        kind = 111;
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 108)
                        kind = 108;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 109)
                     kind = 109;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 111)
                     kind = 111;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 108)
                     kind = 108;
                  { jjCheckNAdd(10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 109)
                     kind = 109;
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 109)
                     kind = 109;
                  { jjCheckNAdd(13); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  { jjCheckNAddStates(3, 5); }
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  { jjCheckNAdd(3); }
                  break;
               case 5:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
               case 7:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 3:
                  if ((jjbitVec2[i2] & l2) == 0L)
                     break;
                  if (kind > 110)
                     kind = 110;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_12(int pos, long active0, long active1){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_12(int pos, long active0, long active1){
   return jjMoveNfa_12(jjStopStringLiteralDfa_12(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_12(){
   switch(curChar)
   {
      case 40:
         return jjStopAtPos(0, 113);
      case 64:
         return jjStopAtPos(0, 115);
      case 91:
         return jjStopAtPos(0, 112);
      default :
         return jjMoveNfa_12(0, 0);
   }
}
private int jjMoveNfa_12(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffef6ffffd9ffL & l) != 0L)
                  {
                     if (kind > 114)
                        kind = 114;
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 116)
                        kind = 116;
                  }
                  break;
               case 1:
                  if ((0x100002600L & l) != 0L)
                     kind = 116;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffffff7fffffeL & l) != 0L)
                     kind = 114;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 114)
                     kind = 114;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_8(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x180000000000L) != 0L)
            return 0;
         if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 46;
            return 0;
         }
         return -1;
      case 1:
         if ((active0 & 0x200000000000L) != 0L)
         {
            jjmatchedKind = 46;
            jjmatchedPos = 1;
            return 0;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_8(int pos, long active0){
   return jjMoveNfa_8(jjStopStringLiteralDfa_8(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_8(){
   switch(curChar)
   {
      case 34:
         return jjMoveStringLiteralDfa1_8(0x200000000000L);
      case 67:
         return jjStartNfaWithStates_8(0, 44, 0);
      case 79:
         return jjStartNfaWithStates_8(0, 43, 0);
      default :
         return jjMoveNfa_8(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_8(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 114:
         return jjMoveStringLiteralDfa2_8(active0, 0x200000000000L);
      default :
         break;
   }
   return jjStartNfa_8(0, active0);
}
private int jjMoveStringLiteralDfa2_8(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_8(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_8(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 34:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_8(2, 45, 0);
         break;
      default :
         break;
   }
   return jjStartNfa_8(1, active0);
}
private int jjStartNfaWithStates_8(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_8(state, pos + 1);
}
private int jjMoveNfa_8(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ffe31400000000L & l) == 0L)
                     break;
                  kind = 46;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  kind = 46;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_7(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_7(int pos, long active0){
   return jjMoveNfa_7(jjStopStringLiteralDfa_7(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_7(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_7(0, 0);
   }
}
private int jjMoveNfa_7(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  kind = 38;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 1:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 38)
                     kind = 38;
                  { jjCheckNAdd(1); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_4(int pos, long active0, long active1, long active2, long active3, long active4){
   switch (pos)
   {
      case 0:
         if ((active4 & 0x40000000000L) != 0L)
            return 14;
         if ((active4 & 0x78000000L) != 0L)
         {
            jjmatchedKind = 306;
            return 3;
         }
         return -1;
      case 1:
         if ((active4 & 0x78000000L) != 0L)
         {
            jjmatchedKind = 306;
            jjmatchedPos = 1;
            return 3;
         }
         return -1;
      case 2:
         if ((active4 & 0x68000000L) != 0L)
         {
            jjmatchedKind = 306;
            jjmatchedPos = 2;
            return 3;
         }
         if ((active4 & 0x10000000L) != 0L)
            return 3;
         return -1;
      case 3:
         if ((active4 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 306;
            jjmatchedPos = 3;
            return 3;
         }
         if ((active4 & 0x8000000L) != 0L)
            return 3;
         return -1;
      case 4:
         if ((active4 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 306;
            jjmatchedPos = 4;
            return 3;
         }
         return -1;
      case 5:
         if ((active4 & 0x60000000L) != 0L)
         {
            jjmatchedKind = 306;
            jjmatchedPos = 5;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_4(int pos, long active0, long active1, long active2, long active3, long active4){
   return jjMoveNfa_4(jjStopStringLiteralDfa_4(pos, active0, active1, active2, active3, active4), pos + 1);
}
private int jjMoveStringLiteralDfa0_4(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 308);
      case 13:
         return jjStopAtPos(0, 309);
      case 34:
         return jjStartNfaWithStates_4(0, 298, 14);
      case 35:
         return jjMoveStringLiteralDfa1_4(0x20L, 0x0L);
      case 38:
         return jjStopAtPos(0, 293);
      case 40:
         return jjStopAtPos(0, 300);
      case 41:
         return jjStopAtPos(0, 301);
      case 42:
         return jjStopAtPos(0, 296);
      case 43:
         return jjStopAtPos(0, 294);
      case 44:
         return jjStopAtPos(0, 292);
      case 45:
         return jjStopAtPos(0, 295);
      case 47:
         return jjStopAtPos(0, 297);
      case 58:
         return jjStopAtPos(0, 299);
      case 60:
         jjmatchedKind = 288;
         return jjMoveStringLiteralDfa1_4(0x0L, 0x280000000L);
      case 61:
         jjmatchedKind = 281;
         return jjMoveStringLiteralDfa1_4(0x0L, 0x4000000L);
      case 62:
         jjmatchedKind = 290;
         return jjMoveStringLiteralDfa1_4(0x0L, 0x800000000L);
      case 64:
         return jjStopAtPos(0, 280);
      case 91:
         return jjStopAtPos(0, 302);
      case 93:
         return jjStopAtPos(0, 303);
      case 110:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x40000000L);
      case 111:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x8000000L);
      case 117:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x10000000L);
      case 120:
         return jjMoveStringLiteralDfa1_4(0x0L, 0x20000000L);
      default :
         return jjMoveNfa_4(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_4(long active0, long active4){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(0, active0, 0L, 0L, 0L, active4);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x20L) != 0L)
            return jjStopAtPos(1, 5);
         break;
      case 61:
         if ((active4 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 282);
         else if ((active4 & 0x200000000L) != 0L)
            return jjStopAtPos(1, 289);
         else if ((active4 & 0x800000000L) != 0L)
            return jjStopAtPos(1, 291);
         break;
      case 62:
         if ((active4 & 0x80000000L) != 0L)
            return jjStopAtPos(1, 287);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_4(active0, 0L, active4, 0x8000000L);
      case 110:
         return jjMoveStringLiteralDfa2_4(active0, 0L, active4, 0x10000000L);
      case 111:
         return jjMoveStringLiteralDfa2_4(active0, 0L, active4, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_4(0, active0, 0L, 0L, 0L, active4);
}
private int jjMoveStringLiteralDfa2_4(long old0, long active0, long old4, long active4){
   if (((active0 &= old0) | (active4 &= old4)) == 0L)
      return jjStartNfa_4(0, old0, 0L, 0L, 0L, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(1, 0L, 0L, 0L, 0L, active4);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active4 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_4(2, 284, 3);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_4(active4, 0x8000000L);
      case 114:
         return jjMoveStringLiteralDfa3_4(active4, 0x20000000L);
      case 116:
         return jjMoveStringLiteralDfa3_4(active4, 0x40000000L);
      default :
         break;
   }
   return jjStartNfa_4(1, 0L, 0L, 0L, 0L, active4);
}
private int jjMoveStringLiteralDfa3_4(long old4, long active4){
   if (((active4 &= old4)) == 0L)
      return jjStartNfa_4(1, 0L, 0L, 0L, 0L, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(2, 0L, 0L, 0L, 0L, active4);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_4(active4, 0x60000000L);
      case 114:
         if ((active4 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_4(3, 283, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_4(2, 0L, 0L, 0L, 0L, active4);
}
private int jjMoveStringLiteralDfa4_4(long old4, long active4){
   if (((active4 &= old4)) == 0L)
      return jjStartNfa_4(2, 0L, 0L, 0L, 0L, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(3, 0L, 0L, 0L, 0L, active4);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_4(active4, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_4(3, 0L, 0L, 0L, 0L, active4);
}
private int jjMoveStringLiteralDfa5_4(long old4, long active4){
   if (((active4 &= old4)) == 0L)
      return jjStartNfa_4(3, 0L, 0L, 0L, 0L, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(4, 0L, 0L, 0L, 0L, active4);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_4(active4, 0x60000000L);
      default :
         break;
   }
   return jjStartNfa_4(4, 0L, 0L, 0L, 0L, active4);
}
private int jjMoveStringLiteralDfa6_4(long old4, long active4){
   if (((active4 &= old4)) == 0L)
      return jjStartNfa_4(4, 0L, 0L, 0L, 0L, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_4(5, 0L, 0L, 0L, 0L, active4);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active4 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_4(6, 285, 3);
         else if ((active4 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_4(6, 286, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_4(5, 0L, 0L, 0L, 0L, active4);
}
private int jjStartNfaWithStates_4(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_4(state, pos + 1);
}
private int jjMoveNfa_4(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 34)
                  {
                     if (kind > 307)
                        kind = 307;
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 304)
                        kind = 304;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 305)
                     kind = 305;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 306)
                     kind = 306;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 307)
                     kind = 307;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 304)
                     kind = 304;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 304)
                     kind = 304;
                  { jjCheckNAdd(10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 305)
                     kind = 305;
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 305)
                     kind = 305;
                  { jjCheckNAdd(13); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  { jjCheckNAddStates(3, 5); }
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 306)
                     kind = 306;
                  { jjCheckNAdd(3); }
                  break;
               case 5:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
               case 7:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 3:
                  if ((jjbitVec2[i2] & l2) == 0L)
                     break;
                  if (kind > 306)
                     kind = 306;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_15(int pos, long active0, long active1, long active2, long active3){
   switch (pos)
   {
      case 0:
         if ((active3 & 0x4000L) != 0L)
            return 14;
         if ((active3 & 0x1eL) != 0L)
         {
            jjmatchedKind = 214;
            return 3;
         }
         return -1;
      case 1:
         if ((active3 & 0x1eL) != 0L)
         {
            jjmatchedKind = 214;
            jjmatchedPos = 1;
            return 3;
         }
         return -1;
      case 2:
         if ((active3 & 0x1aL) != 0L)
         {
            jjmatchedKind = 214;
            jjmatchedPos = 2;
            return 3;
         }
         if ((active3 & 0x4L) != 0L)
            return 3;
         return -1;
      case 3:
         if ((active3 & 0x18L) != 0L)
         {
            jjmatchedKind = 214;
            jjmatchedPos = 3;
            return 3;
         }
         if ((active3 & 0x2L) != 0L)
            return 3;
         return -1;
      case 4:
         if ((active3 & 0x18L) != 0L)
         {
            jjmatchedKind = 214;
            jjmatchedPos = 4;
            return 3;
         }
         return -1;
      case 5:
         if ((active3 & 0x18L) != 0L)
         {
            jjmatchedKind = 214;
            jjmatchedPos = 5;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_15(int pos, long active0, long active1, long active2, long active3){
   return jjMoveNfa_15(jjStopStringLiteralDfa_15(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_15(){
   switch(curChar)
   {
      case 34:
         return jjStartNfaWithStates_15(0, 206, 14);
      case 40:
         return jjStopAtPos(0, 208);
      case 41:
         return jjStopAtPos(0, 209);
      case 42:
         return jjStopAtPos(0, 204);
      case 43:
         return jjStopAtPos(0, 202);
      case 45:
         return jjStopAtPos(0, 203);
      case 47:
         return jjStopAtPos(0, 205);
      case 58:
         return jjStopAtPos(0, 207);
      case 60:
         jjmatchedKind = 198;
         return jjMoveStringLiteralDfa1_15(0xa0L);
      case 61:
         jjmatchedKind = 191;
         return jjMoveStringLiteralDfa1_15(0x1L);
      case 62:
         jjmatchedKind = 200;
         return jjMoveStringLiteralDfa1_15(0x200L);
      case 91:
         return jjStopAtPos(0, 211);
      case 93:
         return jjStopAtPos(0, 212);
      case 110:
         return jjMoveStringLiteralDfa1_15(0x10L);
      case 111:
         return jjMoveStringLiteralDfa1_15(0x2L);
      case 117:
         return jjMoveStringLiteralDfa1_15(0x4L);
      case 120:
         return jjMoveStringLiteralDfa1_15(0x8L);
      default :
         return jjMoveNfa_15(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_15(long active3){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_15(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active3 & 0x1L) != 0L)
            return jjStopAtPos(1, 192);
         else if ((active3 & 0x80L) != 0L)
            return jjStopAtPos(1, 199);
         else if ((active3 & 0x200L) != 0L)
            return jjStopAtPos(1, 201);
         break;
      case 62:
         if ((active3 & 0x20L) != 0L)
            return jjStopAtPos(1, 197);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_15(active3, 0x2L);
      case 110:
         return jjMoveStringLiteralDfa2_15(active3, 0x4L);
      case 111:
         return jjMoveStringLiteralDfa2_15(active3, 0x18L);
      default :
         break;
   }
   return jjStartNfa_15(0, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa2_15(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_15(0, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_15(1, 0L, 0L, 0L, active3);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active3 & 0x4L) != 0L)
            return jjStartNfaWithStates_15(2, 194, 3);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_15(active3, 0x2L);
      case 114:
         return jjMoveStringLiteralDfa3_15(active3, 0x8L);
      case 116:
         return jjMoveStringLiteralDfa3_15(active3, 0x10L);
      default :
         break;
   }
   return jjStartNfa_15(1, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa3_15(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_15(1, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_15(2, 0L, 0L, 0L, active3);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_15(active3, 0x18L);
      case 114:
         if ((active3 & 0x2L) != 0L)
            return jjStartNfaWithStates_15(3, 193, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_15(2, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa4_15(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_15(2, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_15(3, 0L, 0L, 0L, active3);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_15(active3, 0x18L);
      default :
         break;
   }
   return jjStartNfa_15(3, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa5_15(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_15(3, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_15(4, 0L, 0L, 0L, active3);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_15(active3, 0x18L);
      default :
         break;
   }
   return jjStartNfa_15(4, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa6_15(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_15(4, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_15(5, 0L, 0L, 0L, active3);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active3 & 0x8L) != 0L)
            return jjStartNfaWithStates_15(6, 195, 3);
         else if ((active3 & 0x10L) != 0L)
            return jjStartNfaWithStates_15(6, 196, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_15(5, 0L, 0L, 0L, active3);
}
private int jjStartNfaWithStates_15(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_15(state, pos + 1);
}
private int jjMoveNfa_15(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 34)
                  {
                     if (kind > 215)
                        kind = 215;
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 210)
                        kind = 210;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 213)
                     kind = 213;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 214)
                     kind = 214;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 215)
                     kind = 215;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 210)
                     kind = 210;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 210)
                     kind = 210;
                  { jjCheckNAdd(10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 213)
                     kind = 213;
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 213)
                     kind = 213;
                  { jjCheckNAdd(13); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  { jjCheckNAddStates(3, 5); }
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 214)
                     kind = 214;
                  { jjCheckNAdd(3); }
                  break;
               case 5:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
               case 7:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 3:
                  if ((jjbitVec2[i2] & l2) == 0L)
                     break;
                  if (kind > 214)
                     kind = 214;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0, long active1, long active2, long active3, long active4){
   switch (pos)
   {
      case 0:
         if ((active3 & 0x7800000000000000L) != 0L)
         {
            jjmatchedKind = 274;
            return 3;
         }
         if ((active4 & 0x200L) != 0L)
            return 14;
         return -1;
      case 1:
         if ((active3 & 0x7800000000000000L) != 0L)
         {
            jjmatchedKind = 274;
            jjmatchedPos = 1;
            return 3;
         }
         return -1;
      case 2:
         if ((active3 & 0x6800000000000000L) != 0L)
         {
            jjmatchedKind = 274;
            jjmatchedPos = 2;
            return 3;
         }
         if ((active3 & 0x1000000000000000L) != 0L)
            return 3;
         return -1;
      case 3:
         if ((active3 & 0x6000000000000000L) != 0L)
         {
            jjmatchedKind = 274;
            jjmatchedPos = 3;
            return 3;
         }
         if ((active3 & 0x800000000000000L) != 0L)
            return 3;
         return -1;
      case 4:
         if ((active3 & 0x6000000000000000L) != 0L)
         {
            jjmatchedKind = 274;
            jjmatchedPos = 4;
            return 3;
         }
         return -1;
      case 5:
         if ((active3 & 0x6000000000000000L) != 0L)
         {
            jjmatchedKind = 274;
            jjmatchedPos = 5;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0, long active1, long active2, long active3, long active4){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0, active1, active2, active3, active4), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 276);
      case 13:
         return jjStopAtPos(0, 277);
      case 34:
         return jjStartNfaWithStates_2(0, 265, 14);
      case 35:
         return jjMoveStringLiteralDfa1_2(0x8L, 0x0L, 0x0L);
      case 38:
         return jjStopAtPos(0, 260);
      case 40:
         return jjStopAtPos(0, 268);
      case 41:
         return jjStopAtPos(0, 269);
      case 42:
         return jjStopAtPos(0, 263);
      case 43:
         return jjStopAtPos(0, 261);
      case 44:
         return jjStopAtPos(0, 267);
      case 45:
         return jjStopAtPos(0, 262);
      case 47:
         return jjStopAtPos(0, 264);
      case 58:
         return jjStopAtPos(0, 266);
      case 60:
         jjmatchedKind = 256;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x8000000000000000L, 0x2L);
      case 61:
         jjmatchedKind = 249;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x400000000000000L, 0x0L);
      case 62:
         jjmatchedKind = 258;
         return jjMoveStringLiteralDfa1_2(0x0L, 0x0L, 0x8L);
      case 91:
         return jjStopAtPos(0, 270);
      case 93:
         return jjStopAtPos(0, 271);
      case 110:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x4000000000000000L, 0x0L);
      case 111:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x800000000000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x1000000000000000L, 0x0L);
      case 120:
         return jjMoveStringLiteralDfa1_2(0x0L, 0x2000000000000000L, 0x0L);
      default :
         return jjMoveNfa_2(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0, long active3, long active4){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0, 0L, 0L, active3, active4);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      case 61:
         if ((active3 & 0x400000000000000L) != 0L)
            return jjStopAtPos(1, 250);
         else if ((active4 & 0x2L) != 0L)
            return jjStopAtPos(1, 257);
         else if ((active4 & 0x8L) != 0L)
            return jjStopAtPos(1, 259);
         break;
      case 62:
         if ((active3 & 0x8000000000000000L) != 0L)
            return jjStopAtPos(1, 255);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active3, 0x800000000000000L, active4, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active3, 0x1000000000000000L, active4, 0L);
      case 111:
         return jjMoveStringLiteralDfa2_2(active0, 0L, active3, 0x6000000000000000L, active4, 0L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0, 0L, 0L, active3, active4);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0, long old3, long active3, long old4, long active4){
   if (((active0 &= old0) | (active3 &= old3) | (active4 &= old4)) == 0L)
      return jjStartNfa_2(0, old0, 0L, 0L, old3, old4);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, 0L, 0L, 0L, active3, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active3 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_2(2, 252, 3);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_2(active3, 0x800000000000000L);
      case 114:
         return jjMoveStringLiteralDfa3_2(active3, 0x2000000000000000L);
      case 116:
         return jjMoveStringLiteralDfa3_2(active3, 0x4000000000000000L);
      default :
         break;
   }
   return jjStartNfa_2(1, 0L, 0L, 0L, active3, 0L);
}
private int jjMoveStringLiteralDfa3_2(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_2(1, 0L, 0L, 0L, old3, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(2, 0L, 0L, 0L, active3, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_2(active3, 0x6000000000000000L);
      case 114:
         if ((active3 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_2(3, 251, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_2(2, 0L, 0L, 0L, active3, 0L);
}
private int jjMoveStringLiteralDfa4_2(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_2(2, 0L, 0L, 0L, old3, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(3, 0L, 0L, 0L, active3, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_2(active3, 0x6000000000000000L);
      default :
         break;
   }
   return jjStartNfa_2(3, 0L, 0L, 0L, active3, 0L);
}
private int jjMoveStringLiteralDfa5_2(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_2(3, 0L, 0L, 0L, old3, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(4, 0L, 0L, 0L, active3, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_2(active3, 0x6000000000000000L);
      default :
         break;
   }
   return jjStartNfa_2(4, 0L, 0L, 0L, active3, 0L);
}
private int jjMoveStringLiteralDfa6_2(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_2(4, 0L, 0L, 0L, old3, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(5, 0L, 0L, 0L, active3, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active3 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_2(6, 253, 3);
         else if ((active3 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_2(6, 254, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_2(5, 0L, 0L, 0L, active3, 0L);
}
private int jjStartNfaWithStates_2(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_2(state, pos + 1);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 34)
                  {
                     if (kind > 275)
                        kind = 275;
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 272)
                        kind = 272;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 273)
                     kind = 273;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 274)
                     kind = 274;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 275)
                     kind = 275;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 272)
                     kind = 272;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 272)
                     kind = 272;
                  { jjCheckNAdd(10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 273)
                     kind = 273;
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 273)
                     kind = 273;
                  { jjCheckNAdd(13); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  { jjCheckNAddStates(3, 5); }
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 274)
                     kind = 274;
                  { jjCheckNAdd(3); }
                  break;
               case 5:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
               case 7:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 3:
                  if ((jjbitVec2[i2] & l2) == 0L)
                     break;
                  if (kind > 274)
                     kind = 274;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_9(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_9(int pos, long active0){
   return jjMoveNfa_9(jjStopStringLiteralDfa_9(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_9(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_9(0, 0);
   }
}
private int jjMoveNfa_9(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 34)
                     { jjCheckNAddStates(12, 14); }
                  break;
               case 2:
                  { jjCheckNAddStates(12, 14); }
                  break;
               case 3:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(12, 14); }
                  break;
               case 4:
                  if (curChar == 34 && kind > 51)
                     kind = 51;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
               case 3:
                  { jjCheckNAddStates(12, 14); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
               case 3:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(12, 14); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_5(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      case 0:
         if ((active2 & 0x1e0000000000L) != 0L)
         {
            jjmatchedKind = 189;
            return 2;
         }
         if ((active2 & 0x33fe18000000000L) != 0L)
            return 2;
         return -1;
      case 1:
         if ((active2 & 0x1e0000000000L) != 0L)
         {
            jjmatchedKind = 189;
            jjmatchedPos = 1;
            return 2;
         }
         if ((active2 & 0x2a10000000000L) != 0L)
            return 2;
         return -1;
      case 2:
         if ((active2 & 0x1a0000000000L) != 0L)
         {
            jjmatchedKind = 189;
            jjmatchedPos = 2;
            return 2;
         }
         if ((active2 & 0x40000000000L) != 0L)
            return 2;
         return -1;
      case 3:
         if ((active2 & 0x180000000000L) != 0L)
         {
            jjmatchedKind = 189;
            jjmatchedPos = 3;
            return 2;
         }
         if ((active2 & 0x20000000000L) != 0L)
            return 2;
         return -1;
      case 4:
         if ((active2 & 0x180000000000L) != 0L)
         {
            jjmatchedKind = 189;
            jjmatchedPos = 4;
            return 2;
         }
         return -1;
      case 5:
         if ((active2 & 0x180000000000L) != 0L)
         {
            jjmatchedKind = 189;
            jjmatchedPos = 5;
            return 2;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_5(int pos, long active0, long active1, long active2){
   return jjMoveNfa_5(jjStopStringLiteralDfa_5(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_5(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 163);
      case 13:
         return jjStopAtPos(0, 164);
      case 35:
         return jjMoveStringLiteralDfa1_5(0x40L, 0x0L);
      case 40:
         return jjStopAtPos(0, 182);
      case 41:
         return jjStopAtPos(0, 183);
      case 42:
         return jjStartNfaWithStates_5(0, 180, 2);
      case 43:
         return jjStartNfaWithStates_5(0, 178, 2);
      case 44:
         return jjStopAtPos(0, 186);
      case 45:
         return jjStartNfaWithStates_5(0, 179, 2);
      case 47:
         return jjStartNfaWithStates_5(0, 181, 2);
      case 60:
         jjmatchedKind = 174;
         return jjMoveStringLiteralDfa1_5(0x0L, 0xa00000000000L);
      case 61:
         jjmatchedKind = 167;
         return jjMoveStringLiteralDfa1_5(0x0L, 0x10000000000L);
      case 62:
         jjmatchedKind = 176;
         return jjMoveStringLiteralDfa1_5(0x0L, 0x2000000000000L);
      case 91:
         return jjStartNfaWithStates_5(0, 184, 2);
      case 93:
         return jjStartNfaWithStates_5(0, 185, 2);
      case 110:
         return jjMoveStringLiteralDfa1_5(0x0L, 0x100000000000L);
      case 111:
         return jjMoveStringLiteralDfa1_5(0x0L, 0x20000000000L);
      case 117:
         return jjMoveStringLiteralDfa1_5(0x0L, 0x40000000000L);
      case 120:
         return jjMoveStringLiteralDfa1_5(0x0L, 0x80000000000L);
      default :
         return jjMoveNfa_5(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_5(long active0, long active2){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(0, active0, 0L, active2);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x40L) != 0L)
            return jjStopAtPos(1, 6);
         break;
      case 61:
         if ((active2 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_5(1, 168, 2);
         else if ((active2 & 0x800000000000L) != 0L)
            return jjStartNfaWithStates_5(1, 175, 2);
         else if ((active2 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_5(1, 177, 2);
         break;
      case 62:
         if ((active2 & 0x200000000000L) != 0L)
            return jjStartNfaWithStates_5(1, 173, 2);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_5(active0, 0L, active2, 0x20000000000L);
      case 110:
         return jjMoveStringLiteralDfa2_5(active0, 0L, active2, 0x40000000000L);
      case 111:
         return jjMoveStringLiteralDfa2_5(active0, 0L, active2, 0x180000000000L);
      default :
         break;
   }
   return jjStartNfa_5(0, active0, 0L, active2);
}
private int jjMoveStringLiteralDfa2_5(long old0, long active0, long old2, long active2){
   if (((active0 &= old0) | (active2 &= old2)) == 0L)
      return jjStartNfa_5(0, old0, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(1, 0L, 0L, active2);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active2 & 0x40000000000L) != 0L)
            return jjStartNfaWithStates_5(2, 170, 2);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_5(active2, 0x20000000000L);
      case 114:
         return jjMoveStringLiteralDfa3_5(active2, 0x80000000000L);
      case 116:
         return jjMoveStringLiteralDfa3_5(active2, 0x100000000000L);
      default :
         break;
   }
   return jjStartNfa_5(1, 0L, 0L, active2);
}
private int jjMoveStringLiteralDfa3_5(long old2, long active2){
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_5(1, 0L, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(2, 0L, 0L, active2);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_5(active2, 0x180000000000L);
      case 114:
         if ((active2 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_5(3, 169, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_5(2, 0L, 0L, active2);
}
private int jjMoveStringLiteralDfa4_5(long old2, long active2){
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_5(2, 0L, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(3, 0L, 0L, active2);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_5(active2, 0x180000000000L);
      default :
         break;
   }
   return jjStartNfa_5(3, 0L, 0L, active2);
}
private int jjMoveStringLiteralDfa5_5(long old2, long active2){
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_5(3, 0L, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(4, 0L, 0L, active2);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_5(active2, 0x180000000000L);
      default :
         break;
   }
   return jjStartNfa_5(4, 0L, 0L, active2);
}
private int jjMoveStringLiteralDfa6_5(long old2, long active2){
   if (((active2 &= old2)) == 0L)
      return jjStartNfa_5(4, 0L, 0L, old2);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_5(5, 0L, 0L, active2);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active2 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_5(6, 171, 2);
         else if ((active2 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_5(6, 172, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_5(5, 0L, 0L, active2);
}
private int jjStartNfaWithStates_5(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_5(state, pos + 1);
}
private int jjMoveNfa_5(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 13;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xffffecf6ffffd9ffL & l) != 0L)
                  {
                     if (kind > 189)
                        kind = 189;
                     { jjCheckNAdd(2); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 187)
                        kind = 187;
                     { jjCheckNAddStates(15, 17); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(18, 20); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 188)
                     kind = 188;
                  { jjCheckNAdd(1); }
                  break;
               case 2:
                  if ((0xffffecf6ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 189)
                     kind = 189;
                  { jjCheckNAdd(2); }
                  break;
               case 3:
                  if (curChar == 34)
                     { jjCheckNAddStates(18, 20); }
                  break;
               case 5:
                  { jjCheckNAddStates(18, 20); }
                  break;
               case 6:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(18, 20); }
                  break;
               case 7:
                  if (curChar == 34 && kind > 190)
                     kind = 190;
                  break;
               case 8:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  { jjCheckNAddStates(15, 17); }
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 187)
                     kind = 187;
                  { jjCheckNAdd(9); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 188)
                     kind = 188;
                  { jjCheckNAddTwoStates(10, 11); }
                  break;
               case 11:
                  if (curChar == 46)
                     { jjCheckNAdd(12); }
                  break;
               case 12:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 188)
                     kind = 188;
                  { jjCheckNAdd(12); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  if (kind > 189)
                     kind = 189;
                  { jjCheckNAdd(2); }
                  break;
               case 4:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
               case 6:
                  { jjCheckNAddStates(18, 20); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 2:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 189)
                     kind = 189;
                  { jjCheckNAdd(2); }
                  break;
               case 5:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(18, 20); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 13 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_10(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active1 & 0x2000L) != 0L)
            return 14;
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x7L) != 0L)
         {
            jjmatchedKind = 82;
            return 3;
         }
         return -1;
      case 1:
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x7L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 1;
            return 3;
         }
         return -1;
      case 2:
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 2;
            return 3;
         }
         if ((active1 & 0x1L) != 0L)
            return 3;
         return -1;
      case 3:
         if ((active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 3;
            return 3;
         }
         if ((active0 & 0x8000000000000000L) != 0L)
            return 3;
         return -1;
      case 4:
         if ((active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 4;
            return 3;
         }
         return -1;
      case 5:
         if ((active1 & 0x6L) != 0L)
         {
            jjmatchedKind = 82;
            jjmatchedPos = 5;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_10(int pos, long active0, long active1){
   return jjMoveNfa_10(jjStopStringLiteralDfa_10(pos, active0, active1), pos + 1);
}
private int jjMoveStringLiteralDfa0_10(){
   switch(curChar)
   {
      case 34:
         return jjStartNfaWithStates_10(0, 77, 14);
      case 40:
         return jjStopAtPos(0, 78);
      case 41:
         return jjStopAtPos(0, 79);
      case 42:
         return jjStopAtPos(0, 74);
      case 43:
         return jjStopAtPos(0, 72);
      case 44:
         return jjStopAtPos(0, 76);
      case 45:
         return jjStopAtPos(0, 73);
      case 47:
         return jjStopAtPos(0, 75);
      case 60:
         jjmatchedKind = 68;
         return jjMoveStringLiteralDfa1_10(0x0L, 0x28L);
      case 61:
         jjmatchedKind = 61;
         return jjMoveStringLiteralDfa1_10(0x4000000000000000L, 0x0L);
      case 62:
         jjmatchedKind = 70;
         return jjMoveStringLiteralDfa1_10(0x0L, 0x80L);
      case 64:
         return jjStopAtPos(0, 60);
      case 110:
         return jjMoveStringLiteralDfa1_10(0x0L, 0x4L);
      case 111:
         return jjMoveStringLiteralDfa1_10(0x8000000000000000L, 0x0L);
      case 117:
         return jjMoveStringLiteralDfa1_10(0x0L, 0x1L);
      case 120:
         return jjMoveStringLiteralDfa1_10(0x0L, 0x2L);
      default :
         return jjMoveNfa_10(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_10(long active0, long active1){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStopAtPos(1, 62);
         else if ((active1 & 0x20L) != 0L)
            return jjStopAtPos(1, 69);
         else if ((active1 & 0x80L) != 0L)
            return jjStopAtPos(1, 71);
         break;
      case 62:
         if ((active1 & 0x8L) != 0L)
            return jjStopAtPos(1, 67);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_10(active0, 0x8000000000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa2_10(active0, 0L, active1, 0x1L);
      case 111:
         return jjMoveStringLiteralDfa2_10(active0, 0L, active1, 0x6L);
      default :
         break;
   }
   return jjStartNfa_10(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_10(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_10(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_10(2, 64, 3);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_10(active0, 0x8000000000000000L, active1, 0L);
      case 114:
         return jjMoveStringLiteralDfa3_10(active0, 0L, active1, 0x2L);
      case 116:
         return jjMoveStringLiteralDfa3_10(active0, 0L, active1, 0x4L);
      default :
         break;
   }
   return jjStartNfa_10(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_10(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_10(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_10(active0, 0L, active1, 0x6L);
      case 114:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_10(3, 63, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_10(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_10(long old0, long active0, long old1, long active1){
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_10(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(3, 0L, active1);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_10(active1, 0x6L);
      default :
         break;
   }
   return jjStartNfa_10(3, 0L, active1);
}
private int jjMoveStringLiteralDfa5_10(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(3, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(4, 0L, active1);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_10(active1, 0x6L);
      default :
         break;
   }
   return jjStartNfa_10(4, 0L, active1);
}
private int jjMoveStringLiteralDfa6_10(long old1, long active1){
   if (((active1 &= old1)) == 0L)
      return jjStartNfa_10(4, 0L, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_10(5, 0L, active1);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_10(6, 65, 3);
         else if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_10(6, 66, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_10(5, 0L, active1);
}
private int jjStartNfaWithStates_10(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_10(state, pos + 1);
}
private int jjMoveNfa_10(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 34)
                  {
                     if (kind > 83)
                        kind = 83;
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 80)
                        kind = 80;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 83)
                     kind = 83;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 80)
                     kind = 80;
                  { jjCheckNAdd(10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 81)
                     kind = 81;
                  { jjCheckNAdd(13); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  { jjCheckNAddStates(3, 5); }
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  { jjCheckNAdd(3); }
                  break;
               case 5:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
               case 7:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 3:
                  if ((jjbitVec2[i2] & l2) == 0L)
                     break;
                  if (kind > 82)
                     kind = 82;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0, long active1, long active2){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 145);
      case 13:
         return jjStopAtPos(0, 146);
      case 34:
         return jjStopAtPos(0, 151);
      case 35:
         return jjMoveStringLiteralDfa1_3(0x10L);
      case 40:
         return jjStopAtPos(0, 149);
      case 41:
         return jjStopAtPos(0, 150);
      case 44:
         return jjStopAtPos(0, 152);
      case 58:
         return jjStopAtPos(0, 157);
      case 91:
         return jjStopAtPos(0, 153);
      case 93:
         return jjStopAtPos(0, 154);
      default :
         return jjMoveNfa_3(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_3(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_3(0, active0, 0L, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 42:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      default :
         break;
   }
   return jjStartNfa_3(0, active0, 0L, 0L);
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 3;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 155)
                     kind = 155;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 156)
                     kind = 156;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 2:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 156)
                     kind = 156;
                  { jjCheckNAdd(2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 3 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_14(int pos, long active0, long active1, long active2){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_14(int pos, long active0, long active1, long active2){
   return jjMoveNfa_14(jjStopStringLiteralDfa_14(pos, active0, active1, active2), pos + 1);
}
private int jjMoveStringLiteralDfa0_14(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_14(0, 0);
   }
}
private int jjMoveNfa_14(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x3ff001000000000L & l) == 0L)
                     break;
                  kind = 158;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  kind = 158;
                  jjstateSet[jjnewStateCnt++] = 0;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_18(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_18(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   return jjMoveNfa_18(jjStopStringLiteralDfa_18(pos, active0, active1, active2, active3, active4, active5), pos + 1);
}
private int jjMoveStringLiteralDfa0_18(){
   switch(curChar)
   {
      default :
         return jjMoveNfa_18(0, 0);
   }
}
private int jjMoveNfa_18(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 34)
                     { jjCheckNAddStates(12, 14); }
                  break;
               case 2:
                  { jjCheckNAddStates(12, 14); }
                  break;
               case 3:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(12, 14); }
                  break;
               case 4:
                  if (curChar == 34 && kind > 328)
                     kind = 328;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 2:
               case 3:
                  { jjCheckNAddStates(12, 14); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 2:
               case 3:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(12, 14); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_6(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_6(int pos, long active0){
   return jjMoveNfa_6(jjStopStringLiteralDfa_6(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_6(){
   switch(curChar)
   {
      case 35:
         return jjStopAtPos(0, 7);
      default :
         return jjMoveNfa_6(0, 0);
   }
}
private int jjMoveNfa_6(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 1;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffff7ffffffffL & l) != 0L)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 8)
                     kind = 8;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 1 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private int jjMoveStringLiteralDfa0_0()
{
   return jjMoveNfa_0(0, 0);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 1:
                  if ((0x2400L & l) != 0L)
                     kind = 1;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x1bffdd204L) != 0L)
            return 6;
         if ((active0 & 0xc00L) != 0L)
         {
            jjmatchedKind = 33;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0){
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 35:
         jjmatchedKind = 12;
         return jjMoveStringLiteralDfa1_1(0x1bffdc204L);
      case 47:
         return jjMoveStringLiteralDfa1_1(0xc00L);
      case 64:
         return jjStopAtPos(0, 13);
      default :
         return jjMoveNfa_1(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 33:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(1, 32);
         break;
      case 36:
         if ((active0 & 0x40000L) != 0L)
            return jjStopAtPos(1, 18);
         break;
      case 42:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(1, 2);
         break;
      case 61:
         if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 27);
         break;
      case 62:
         if ((active0 & 0x80000000L) != 0L)
            return jjStopAtPos(1, 31);
         break;
      case 63:
         if ((active0 & 0x200L) != 0L)
            return jjStopAtPos(1, 9);
         break;
      case 66:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(1, 28);
         break;
      case 67:
         if ((active0 & 0x10000L) != 0L)
            return jjStopAtPos(1, 16);
         break;
      case 68:
         if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(1, 23);
         break;
      case 71:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(1, 20);
         break;
      case 74:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_1(1, 10, 10);
         else if ((active0 & 0x200000L) != 0L)
            return jjStopAtPos(1, 21);
         break;
      case 76:
         if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 25);
         break;
      case 78:
         if ((active0 & 0x800L) != 0L)
            return jjStartNfaWithStates_1(1, 11, 10);
         break;
      case 83:
         if ((active0 & 0x4000L) != 0L)
            return jjStopAtPos(1, 14);
         break;
      case 87:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(1, 15);
         break;
      case 88:
         if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_1(1, 29, 11);
         break;
      case 90:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(1, 22);
         break;
      case 94:
         if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(1, 19);
         break;
      case 100:
         if ((active0 & 0x1000000L) != 0L)
            return jjStopAtPos(1, 24);
         break;
      case 113:
         if ((active0 & 0x4000000L) != 0L)
            return jjStopAtPos(1, 26);
         break;
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private int jjStartNfaWithStates_1(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_1(state, pos + 1);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 11;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
                  if ((0xfffffff6ffffd9ffL & l) != 0L)
                  {
                     if (kind > 33)
                        kind = 33;
                     { jjCheckNAdd(10); }
                  }
                  else if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 6;
                  if (curChar == 47)
                     { jjCheckNAddStates(21, 23); }
                  break;
               case 3:
                  if ((0xfffffff6ffffd9ffL & l) != 0L)
                  {
                     if (kind > 33)
                        kind = 33;
                     { jjCheckNAdd(10); }
                  }
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  else if (curChar == 58)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  else if (curChar == 34)
                     { jjCheckNAdd(4); }
                  break;
               case 11:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(7, 8); }
                  else if (curChar == 60)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(1, 2); }
                  break;
               case 2:
                  if (curChar == 58 && kind > 17)
                     kind = 17;
                  break;
               case 4:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(4, 5); }
                  break;
               case 5:
                  if (curChar == 34)
                     { jjCheckNAdd(2); }
                  break;
               case 7:
                  if ((0x100002600L & l) != 0L)
                     { jjCheckNAddTwoStates(7, 8); }
                  break;
               case 8:
                  if (curChar == 60 && kind > 30)
                     kind = 30;
                  break;
               case 9:
                  if (curChar == 35)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 10:
                  if ((0xfffffff6ffffd9ffL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(10); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 10:
                  if ((0xfffffffffffffffeL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(10); }
                  break;
               case 3:
                  if ((0xfffffffffffffffeL & l) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(10); }
                  break;
               case 4:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     { jjAddStates(24, 25); }
                  break;
               case 6:
                  if (curChar == 88)
                     { jjAddStates(26, 27); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 0:
               case 10:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(10); }
                  break;
               case 3:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 33)
                     kind = 33;
                  { jjCheckNAdd(10); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 11 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_16(int pos, long active0, long active1, long active2, long active3){
   switch (pos)
   {
      case 0:
         if ((active3 & 0x80000000000L) != 0L)
            return 14;
         if ((active3 & 0x3c0000000L) != 0L)
         {
            jjmatchedKind = 243;
            return 3;
         }
         return -1;
      case 1:
         if ((active3 & 0x3c0000000L) != 0L)
         {
            jjmatchedKind = 243;
            jjmatchedPos = 1;
            return 3;
         }
         return -1;
      case 2:
         if ((active3 & 0x80000000L) != 0L)
            return 3;
         if ((active3 & 0x340000000L) != 0L)
         {
            jjmatchedKind = 243;
            jjmatchedPos = 2;
            return 3;
         }
         return -1;
      case 3:
         if ((active3 & 0x40000000L) != 0L)
            return 3;
         if ((active3 & 0x300000000L) != 0L)
         {
            jjmatchedKind = 243;
            jjmatchedPos = 3;
            return 3;
         }
         return -1;
      case 4:
         if ((active3 & 0x300000000L) != 0L)
         {
            jjmatchedKind = 243;
            jjmatchedPos = 4;
            return 3;
         }
         return -1;
      case 5:
         if ((active3 & 0x300000000L) != 0L)
         {
            jjmatchedKind = 243;
            jjmatchedPos = 5;
            return 3;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_16(int pos, long active0, long active1, long active2, long active3){
   return jjMoveNfa_16(jjStopStringLiteralDfa_16(pos, active0, active1, active2, active3), pos + 1);
}
private int jjMoveStringLiteralDfa0_16(){
   switch(curChar)
   {
      case 10:
         return jjStopAtPos(0, 245);
      case 13:
         return jjStopAtPos(0, 246);
      case 34:
         return jjStartNfaWithStates_16(0, 235, 14);
      case 40:
         return jjStopAtPos(0, 237);
      case 41:
         return jjStopAtPos(0, 238);
      case 42:
         return jjStopAtPos(0, 233);
      case 43:
         return jjStopAtPos(0, 231);
      case 45:
         return jjStopAtPos(0, 232);
      case 47:
         return jjStopAtPos(0, 234);
      case 58:
         return jjStopAtPos(0, 236);
      case 60:
         jjmatchedKind = 227;
         return jjMoveStringLiteralDfa1_16(0x1400000000L);
      case 61:
         jjmatchedKind = 220;
         return jjMoveStringLiteralDfa1_16(0x20000000L);
      case 62:
         jjmatchedKind = 229;
         return jjMoveStringLiteralDfa1_16(0x4000000000L);
      case 91:
         return jjStopAtPos(0, 240);
      case 93:
         return jjStopAtPos(0, 241);
      case 110:
         return jjMoveStringLiteralDfa1_16(0x200000000L);
      case 111:
         return jjMoveStringLiteralDfa1_16(0x40000000L);
      case 117:
         return jjMoveStringLiteralDfa1_16(0x80000000L);
      case 120:
         return jjMoveStringLiteralDfa1_16(0x100000000L);
      default :
         return jjMoveNfa_16(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_16(long active3){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(0, 0L, 0L, 0L, active3);
      return 1;
   }
   switch(curChar)
   {
      case 61:
         if ((active3 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 221);
         else if ((active3 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 228);
         else if ((active3 & 0x4000000000L) != 0L)
            return jjStopAtPos(1, 230);
         break;
      case 62:
         if ((active3 & 0x400000000L) != 0L)
            return jjStopAtPos(1, 226);
         break;
      case 100:
         return jjMoveStringLiteralDfa2_16(active3, 0x40000000L);
      case 110:
         return jjMoveStringLiteralDfa2_16(active3, 0x80000000L);
      case 111:
         return jjMoveStringLiteralDfa2_16(active3, 0x300000000L);
      default :
         break;
   }
   return jjStartNfa_16(0, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa2_16(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_16(0, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(1, 0L, 0L, 0L, active3);
      return 2;
   }
   switch(curChar)
   {
      case 100:
         if ((active3 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_16(2, 223, 3);
         break;
      case 101:
         return jjMoveStringLiteralDfa3_16(active3, 0x40000000L);
      case 114:
         return jjMoveStringLiteralDfa3_16(active3, 0x100000000L);
      case 116:
         return jjMoveStringLiteralDfa3_16(active3, 0x200000000L);
      default :
         break;
   }
   return jjStartNfa_16(1, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa3_16(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_16(1, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(2, 0L, 0L, 0L, active3);
      return 3;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa4_16(active3, 0x300000000L);
      case 114:
         if ((active3 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_16(3, 222, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_16(2, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa4_16(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_16(2, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(3, 0L, 0L, 0L, active3);
      return 4;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa5_16(active3, 0x300000000L);
      default :
         break;
   }
   return jjStartNfa_16(3, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa5_16(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_16(3, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(4, 0L, 0L, 0L, active3);
      return 5;
   }
   switch(curChar)
   {
      case 98:
         return jjMoveStringLiteralDfa6_16(active3, 0x300000000L);
      default :
         break;
   }
   return jjStartNfa_16(4, 0L, 0L, 0L, active3);
}
private int jjMoveStringLiteralDfa6_16(long old3, long active3){
   if (((active3 &= old3)) == 0L)
      return jjStartNfa_16(4, 0L, 0L, 0L, old3);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_16(5, 0L, 0L, 0L, active3);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active3 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_16(6, 224, 3);
         else if ((active3 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_16(6, 225, 3);
         break;
      default :
         break;
   }
   return jjStartNfa_16(5, 0L, 0L, 0L, active3);
}
private int jjStartNfaWithStates_16(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_16(state, pos + 1);
}
private int jjMoveNfa_16(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 14;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 34)
                  {
                     if (kind > 244)
                        kind = 244;
                  }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 239)
                        kind = 239;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  else if (curChar == 46)
                     { jjCheckNAdd(1); }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 242)
                     kind = 242;
                  { jjCheckNAdd(1); }
                  break;
               case 3:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 243)
                     kind = 243;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               case 4:
                  if (curChar == 34)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 8:
                  if (curChar == 34 && kind > 244)
                     kind = 244;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 239)
                     kind = 239;
                  { jjCheckNAddStates(0, 2); }
                  break;
               case 10:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 239)
                     kind = 239;
                  { jjCheckNAdd(10); }
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 242)
                     kind = 242;
                  { jjCheckNAddTwoStates(11, 12); }
                  break;
               case 12:
                  if (curChar == 46)
                     { jjCheckNAdd(13); }
                  break;
               case 13:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 242)
                     kind = 242;
                  { jjCheckNAdd(13); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
                  { jjCheckNAddStates(3, 5); }
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 0:
               case 3:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 243)
                     kind = 243;
                  { jjCheckNAdd(3); }
                  break;
               case 5:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 6:
                  { jjCheckNAddStates(3, 5); }
                  break;
               case 7:
                  { jjCheckNAddStates(3, 5); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 14:
               case 7:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(3, 5); }
                  break;
               case 3:
                  if ((jjbitVec2[i2] & l2) == 0L)
                     break;
                  if (kind > 243)
                     kind = 243;
                  jjstateSet[jjnewStateCnt++] = 3;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 14 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_20(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_20(int pos, long active0, long active1, long active2, long active3, long active4, long active5){
   return jjMoveNfa_20(jjStopStringLiteralDfa_20(pos, active0, active1, active2, active3, active4, active5), pos + 1);
}
private int jjMoveStringLiteralDfa0_20(){
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa1_20(0x400000L);
      case 91:
         return jjStopAtPos(0, 344);
      case 93:
         return jjStopAtPos(0, 345);
      default :
         return jjMoveNfa_20(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_20(long active5){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_20(0, 0L, 0L, 0L, 0L, 0L, active5);
      return 1;
   }
   switch(curChar)
   {
      case 94:
         if ((active5 & 0x400000L) != 0L)
            return jjStopAtPos(1, 342);
         break;
      default :
         break;
   }
   return jjStartNfa_20(0, 0L, 0L, 0L, 0L, 0L, active5);
}
private int jjMoveNfa_20(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 8;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 343)
                        kind = 343;
                     { jjCheckNAdd(0); }
                  }
                  else if (curChar == 34)
                     { jjCheckNAddStates(18, 20); }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 343)
                     kind = 343;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 346)
                     kind = 346;
                  jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 3:
                  if (curChar == 34)
                     { jjCheckNAddStates(18, 20); }
                  break;
               case 5:
                  { jjCheckNAddStates(18, 20); }
                  break;
               case 6:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     { jjCheckNAddStates(18, 20); }
                  break;
               case 7:
                  if (curChar == 34 && kind > 347)
                     kind = 347;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 2:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 346)
                     kind = 346;
                  { jjCheckNAdd(2); }
                  break;
               case 4:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 5:
               case 6:
                  { jjCheckNAddStates(18, 20); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
               case 6:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjCheckNAddStates(18, 20); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 8 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   10, 11, 12, 5, 7, 8, 3, 5, 6, 5, 6, 7, 1, 3, 4, 9, 
   10, 11, 4, 6, 7, 1, 3, 2, 4, 5, 7, 8, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, "\43\77", "\57\112", 
"\57\116", "\43", "\100", "\43\123", "\43\127", "\43\103", null, "\43\44", "\43\136", 
"\43\107", "\43\112", "\43\132", "\43\104", "\43\144", "\43\114", "\43\161", "\43\75", 
"\43\102", "\43\130", null, "\43\76", "\43\41", null, null, null, null, null, null, null, 
null, null, null, "\117", "\103", "\42\162\42", null, null, null, null, null, null, 
null, null, null, null, null, null, null, null, "\100", "\75", "\75\75", 
"\157\144\145\162", "\165\156\144", "\170\157\162\137\164\142\144", 
"\156\157\164\137\164\142\144", "\74\76", "\74", "\74\75", "\76", "\76\75", "\53", "\55", "\52", "\57", "\54", 
"\42", "\50", "\51", null, null, null, null, null, null, null, null, "\100", "\75", 
"\75\75", "\157\144\145\162", "\165\156\144", "\170\157\162\137\164\142\144", 
"\156\157\164\137\164\142\144", "\74\76", "\74", "\74\75", "\76", "\76\75", "\53", "\55", "\52", "\57", "\54", 
"\42", "\50", "\51", null, null, null, null, "\133", "\50", null, "\100", null, null, 
null, null, null, "\133", "\135", "\75", "\75\75", "\157\144\145\162", 
"\165\156\144", "\170\157\162\137\164\142\144", "\156\157\164\137\164\142\144", "\74\76", 
"\74", "\74\75", "\76", "\76\75", "\53", "\55", "\52", "\57", "\42", "\50", "\51", 
"\54", null, null, null, null, null, null, null, "\50", "\51", "\42", "\54", "\133", 
"\135", null, null, "\72", null, null, null, null, null, null, null, null, null, 
"\75", "\75\75", "\157\144\145\162", "\165\156\144", "\170\157\162\137\164\142\144", 
"\156\157\164\137\164\142\144", "\74\76", "\74", "\74\75", "\76", "\76\75", "\53", "\55", "\52", "\57", "\50", 
"\51", "\133", "\135", "\54", null, null, null, null, "\75", "\75\75", 
"\157\144\145\162", "\165\156\144", "\170\157\162\137\164\142\144", 
"\156\157\164\137\164\142\144", "\74\76", "\74", "\74\75", "\76", "\76\75", "\53", "\55", "\52", "\57", "\42", 
"\72", "\50", "\51", null, "\133", "\135", null, null, null, null, null, null, null, 
"\75", "\75\75", "\157\144\145\162", "\165\156\144", "\170\157\162\137\164\142\144", 
"\156\157\164\137\164\142\144", "\74\76", "\74", "\74\75", "\76", "\76\75", "\53", "\55", "\52", "\57", "\42", 
"\72", "\50", "\51", null, "\133", "\135", null, null, null, null, null, null, null, 
"\75", "\75\75", "\157\144\145\162", "\165\156\144", "\170\157\162\137\164\142\144", 
"\156\157\164\137\164\142\144", "\74\76", "\74", "\74\75", "\76", "\76\75", "\46", "\53", "\55", "\52", "\57", 
"\42", "\72", "\54", "\50", "\51", "\133", "\135", null, null, null, null, null, null, 
null, null, "\100", "\75", "\75\75", "\157\144\145\162", "\165\156\144", 
"\170\157\162\137\164\142\144", "\156\157\164\137\164\142\144", "\74\76", "\74", "\74\75", "\76", "\76\75", 
"\54", "\46", "\53", "\55", "\52", "\57", "\42", "\72", "\50", "\51", "\133", "\135", 
null, null, null, null, null, null, null, null, "\46", "\173", "\104", "\144", 
"\133", "\135", null, null, null, null, null, null, null, null, null, null, null, 
"\46", "\54", "\175", "\133", "\135", null, null, null, null, null, null, null, null, 
"\43\136", null, "\133", "\135", null, null, null, null, null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   for (;;)
   {
     switch(curLexState)
     {
       case 0:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_0();
         break;
       case 1:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_1();
         break;
       case 2:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100000200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_2();
         break;
       case 3:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100000200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_3();
         break;
       case 4:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100000200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_4();
         break;
       case 5:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100000200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_5();
         break;
       case 6:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_6();
         break;
       case 7:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_7();
         break;
       case 8:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_8();
         break;
       case 9:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_9();
         break;
       case 10:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_10();
         break;
       case 11:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_11();
         break;
       case 12:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_12();
         break;
       case 13:
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_13();
         break;
       case 14:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_14();
         break;
       case 15:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_15();
         break;
       case 16:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100000200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_16();
         break;
       case 17:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100000200L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_17();
         break;
       case 18:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_18();
         break;
       case 19:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_19();
         break;
       case 20:
         try { input_stream.backup(0);
            while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
               curChar = input_stream.BeginToken();
         }
         catch (java.io.IOException e1) { continue EOFLoop; }
         jjmatchedKind = 0x7fffffff;
         jjmatchedPos = 0;
         curPos = jjMoveStringLiteralDfa0_20();
         break;
     }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else if ((jjtoSkip[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
        jjimageLen += jjmatchedPos + 1;
      if (jjnewLexState[jjmatchedKind] != -1)
        curLexState = jjnewLexState[jjmatchedKind];
        curPos = 0;
        jjmatchedKind = 0x7fffffff;
        try {
           curChar = input_stream.readChar();
           continue;
        }
        catch (java.io.IOException e1) { }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
   }
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public HitAssAstParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public HitAssAstParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 14; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 21 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "TXT_MODE",
   "COMMAND_MODE_DS",
   "COMMAND_MODE_SS",
   "COMMAND_MODE_AS",
   "COMMAND_MODE_MS",
   "COMMENT_MODE",
   "COMMAND_MODE_DV",
   "COMMAND_MODE_FILE",
   "COMMAND_MODE_IB",
   "COMMAND_MODE_PS",
   "COMMAND_MODE_PS_EL",
   "COMMAND_MODE_PS_IDX_CHECK",
   "COMMAND_MODE_PS_IDX",
   "COMMAND_MODE_SK",
   "COMMAND_MODE_IF",
   "COMMAND_MODE_FOR",
   "COMMAND_MODE_LS",
   "COMMAND_MODE_DUMP",
   "COMMAND_MODE_LS_BRACES",
   "COMMAND_MODE_HC",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, 1, 6, 6, 6, 6, 6, 1, -1, 15, -1, -1, -1, -1, 15, 16, 3, -1, 5, 20, 2, 2, 2, 2, 2, 
   17, 18, 4, 9, 8, 7, 10, 14, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, 
   -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, 13, 11, 1, 1, 1, 1, 1, 1, 1, -1, 1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 
   1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, 1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, -1, 
   -1, -1, -1, 1, -1, -1, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 
   -1, -1, 
};
static final long[] jjtoToken = {
   0xf0087843fffffe03L, 0xfe0fffffff0fffffL, 0xffffff807fe1ffffL, 0xfe1ffffff0ffffffL, 
   0xff0fffffff0fffffL, 0xfc3ff00L, 
};
static final long[] jjtoSkip = {
   0xff787bc00000080L, 0x1f0000000f00000L, 0x7f801e0000L, 0x1e000000f000000L, 
   0xf0000000f00000L, 0xf03c00ffL, 
};
static final long[] jjtoSpecial = {
   0x80L, 0x0L, 0x0L, 0x0L, 
   0x0L, 0x0L, 
};
static final long[] jjtoMore = {
   0x17cL, 0x0L, 0x0L, 0x0L, 
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[14];
    private final int[] jjstateSet = new int[2 * 14];

    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    
    protected char curChar;
}
